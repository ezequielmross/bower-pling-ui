{"version":3,"sources":["main.js","app.module.js","core/apis/cep-service.js","core/apis/coreapi-service.js","core/boot/bootstrapper.js","core/boot/index.js","core/boot/loader.js","core/caching/caching-service.js","core/commons/localstorage-service.js","core/commons/sessionstorage-service.js","core/debugging/error-handler.js","core/debugging/logger.js","components/#template_demo/myComponentSample.js","components/plgDataTable/plgDataTable.js","components/plgDataTableFilters/plgDataTableFilters.js","components/plgDataTableSearch/plgDataTableSearch.js","components/plgImgCrop/ng-img-crop.js","components/plgEditFabSpeedDial/plgEditFabSpeedDial.js","components/plgSetFocus/plgSetFocus.js","app.templates.js"],"names":["context","pling","window","PlingUiConfig","$provide","decorator","$delegate","shadowLogger","PlingUiRun","options","$injector","cache","onRun","cacheViews","get","angular","module","config","run","service","$http","this","getCep","cep","uri","cep_url","base_core_url","core_url","def_api_version","def_api_app","accounts_url","login_url","application_name","getAppCoreUrl","getAccountsCoreUrl","getDriveCoreUrl","getAccountsUrl","getLoginUrl","getApplicationName","charAt","toUpperCase","slice","logger","Bootstrapper","isBootstrapped","prototype","Angular","root","appname","source","cb","self","loader","load","err","warn","debug","value","bootstrap","boot","console","dom","onDOMLoaded","directive","filter","querySelector","name","getAttribute","info","error","addEventListener","document","ConfLoader","settings","filepath","parsed","xhr","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","onerror","open","setRequestHeader","send","CachingService","$templateCache","$route","cacheObj","routeObj","partial","r","viewCache","router","routes","hasOwnProperty","templateUrl","$inject","$window","remove","localStorage","clear","set","key","setObject","stringify","getObject","sessionStorage","PlingUiExceptionHandler","exception","cause","dispatcher","data","details","$broadcast","factory","PlingUiLogger","dispatch","method","params","arg","proc","log","stamp","Date","toString","prefix","msg","push","apply","arguments","restrict","controller","link","$scope","element","attrs","css","tagline","PlgDataTable","$log","$compile","$location","$rootScope","core","scope","serviceModule","dynamicForm","filterDefault","orderBy","limit","page","total","viewItems","gapiDataTableFilters","paginate","replace","builder","compiledElm","buildTemplate","template","selected","chkList","editView","toggleAll","allActions","autoSelect","boundaryLinks","largeEditDialog","pageSelector","rowSelection","query","order","path","id","length","action","payload","forEach","obj","index","patch","collection","_id","success","$emit","postCompile","replaceWith","PlgDataTableFilters","formatResultList","actionsList","subModuleEdit","resultViewItems","param","label","item","getParam","PlgDataTableSearch","serializeQueryString","searchPeople","searchColorActive","searchColorInactivate","colorIconsTrash","search","searchIconsTrash","searchIconsActive","searchIconsInactivate","p","str","encodeURIComponent","join","active","inactive","trash","crop","CropArea","CropAreaCircle","_boxResizeBaseSize","_boxResizeNormalRatio","_boxResizeHoverRatio","_iconMoveNormalRatio","_iconMoveHoverRatio","_boxResizeNormalSize","_boxResizeHoverSize","_posDragStartX","_posDragStartY","_posResizeStartX","_posResizeStartY","_posResizeStartSize","_boxResizeIsHover","_areaIsHover","_boxResizeIsDragging","_areaIsDragging","_calcCirclePerimeterCoords","angleDegrees","hSize","_size","angleRadians","Math","PI","circlePerimeterX","_x","cos","circlePerimeterY","_y","sin","_calcResizeIconCenterCoords","_isCoordWithinArea","coord","sqrt","_isCoordWithinBoxResize","resizeIconCenterCoords","_drawArea","ctx","centerCoords","size","arc","draw","_cropCanvas","drawIconMove","drawIconResizeBoxNESW","processMouseMove","mouseCurX","mouseCurY","cursor","res","_events","trigger","iFR","iFX","iFY","max","_minSize","_dontDragOutside","_ctx","canvas","processMouseDown","mouseDownX","mouseDownY","processMouseUp","CropAreaSquare","_resizeCtrlBaseRadius","_resizeCtrlNormalRatio","_resizeCtrlHoverRatio","_resizeCtrlNormalRadius","_resizeCtrlHoverRadius","_resizeCtrlIsHover","_resizeCtrlIsDragging","_calcSquareCorners","_calcSquareDimensions","left","top","right","bottom","squareDimensions","_isCoordWithinResizeCtrl","resizeIconsCenterCoords","i","len","rect","drawIconResizeCircle","xMulti","yMulti","wasSize","posModifier","hoveredResizeBox","isWithinResizeCtrl","CropCanvas","events","_image","Image","getImage","setImage","image","getX","setX","x","getY","setY","y","getSize","setSize","getMinSize","setMinSize","h","height","w","width","drawCropArea","shapeArrowNW","shapeArrowNE","shapeArrowSW","shapeArrowSE","shapeArrowN","shapeArrowW","shapeArrowS","shapeArrowE","colors","areaOutline","resizeBoxStroke","resizeBoxFill","resizeBoxArrowFill","resizeCircleStroke","resizeCircleFill","moveIconFill","calcPoint","point","offset","scale","drawFilledPolygon","shape","fillStyle","save","beginPath","pc","pc0","moveTo","lineTo","fill","closePath","restore","circleRadius","scaledCircleRadius","strokeStyle","lineWidth","stroke","drawIconResizeBoxBase","boxSize","scaledBoxSize","fillRect","strokeRect","drawIconResizeBoxNWSE","fnDrawClipPath","xRatio","yRatio","xLeft","yTop","clip","drawImage","imageHasData","img","base64ToArrayBuffer","base64","contentType","match","binary","atob","buffer","ArrayBuffer","view","Uint8Array","charCodeAt","objectURLToBlob","url","callback","http","responseType","onload","e","response","getImageData","handleBinaryFile","binFile","findEXIFinJPEG","iptcdata","findIPTCinJPEG","exifdata","call","src","test","arrayBuffer","fileReader","FileReader","target","result","blob","readAsArrayBuffer","Blob","File","byteLength","file","dataView","DataView","getUint8","marker","readEXIFData","getUint16","isFieldSegmentStart","nameHeaderLength","startOffset","sectionLength","readIPTCData","fieldValue","fieldName","dataSize","segmentType","segmentSize","segmentStartPos","IptcFieldMap","getInt16","getStringFromDB","Array","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","val","n","numerator","denominator","type","numValues","getUint32","valueOffset","Number","getInt32","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","TiffTags","ExifIFDPointer","ExifTags","StringValues","Components","GPSInfoIFDPointer","GPSTags","Tags",36864,40960,40961,40962,40963,37121,37122,37500,37510,40964,36867,36868,37520,37521,37522,33434,33437,34850,34852,34855,34856,37377,37378,37379,37380,37381,37382,37383,37384,37385,37396,37386,41483,41484,41486,41487,41488,41492,41493,41495,41728,41729,41730,41985,41986,41987,41988,41989,41990,41991,41992,41993,41994,41995,41996,40965,42016,256,257,34665,34853,258,259,262,274,277,284,530,531,282,283,296,273,278,279,513,514,301,318,319,529,532,306,270,271,272,305,315,33432,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,"ExposureProgram","MeteringMode",255,"LightSource","Flash",31,32,65,69,71,73,77,79,89,93,95,"SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource",120,110,55,80,85,122,105,116,"getData","HTMLImageElement","complete","getTag","getAllTags","a","pretty","strPretty","readFromBinaryFile","$document","cropEXIF","getElementOffset","elem","box","getBoundingClientRect","body","docElem","documentElement","scrollTop","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","elCanvas","opts","drawScene","clearRect","theArea","minCanvasDims","maxCanvasDims","resImgSize","resImgFormat","resImgQuality","resetCropHost","imageDims","imageRatio","canvasDims","prop","margin-left","margin-top","min","getChangedTouches","event","isDefined","changedTouches","originalEvent","onMouseMove","pageX","pageY","onMouseDown","preventDefault","stopPropagation","onMouseUp","getResultImageDataURI","temp_ctx","temp_canvas","getContext","toDataURL","setNewImageSource","imageSource","newImage","substring","toLowerCase","crossOrigin","orientation","indexOf","createElement","cw","ch","cx","cy","deg","rotate","setMaxDimensions","curWidth","curHeight","ratioNewCurWidth","ratioNewCurHeight","ratioMin","setAreaMinSize","parseInt","isNaN","setResultImageSize","setResultImageFormat","format","setResultImageQuality","quality","parseFloat","setAreaType","curSize","curMinSize","curX","curY","AreaClass","on","destroy","off","names","handler","split","args","$timeout","CropHost","CropPubSub","resultImage","changeOnFly","areaType","areaMinSize","resultImageSize","resultImageFormat","resultImageQuality","onChange","onLoadBegin","onLoadDone","onLoadError","storedResultImage","cropHost","find","updateResultImage","$dataURI","fnSafeApply","fn","$apply","$watch","clientWidth","clientHeight","$on","PlgEditFabSpeedDial","$parse","model","plgSetFocus","focus","bind","assign","put"],"mappings":"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","file":"pling-ui.min.js","sourcesContent":["/*global window*/\r\n(function (context) {\r\n    \"use strict\";\r\n\r\n    // starting global context\r\n    context.pling = {};\r\n}(window));\r\n","/*global angular */\r\n(function () {\r\n    \"use strict\";\r\n\r\n    // Config method\r\n    function PlingUiConfig($provide) {\r\n        $provide.decorator(\"$log\", function ($delegate, shadowLogger) {\r\n            return shadowLogger($delegate);\r\n        });\r\n    }\r\n\r\n    // Run method\r\n    function PlingUiRun(options, $injector) {\r\n        var cache = null;\r\n\r\n        if (options.onRun && options.onRun.cacheViews) {\r\n            cache = $injector.get(\"cacheService\");\r\n            cache.cacheViews();\r\n        }\r\n    }\r\n\r\n    // registering on angular\r\n    angular.module('plingUi', ['plingUi.templates', 'ngMaterial', 'datetime' ]);\r\n    angular.module(\"plingUi\").config([\"$provide\", PlingUiConfig]);\r\n    angular.module(\"plingUi\").run([\"boot.options\", \"$injector\", PlingUiRun]);\r\n}());\r\n","/*global angular*/\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('plingUi').service('cepService', ['$http', 'boot.options', function ($http, options) {\r\n\r\n        this.getCep = function (cep) {\r\n            var uri = options.cep_url + cep;\r\n            return $http.get(uri);\r\n        };\r\n\r\n    }]);\r\n}());\r\n","/*global angular */\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('plingUi').service('coreApiService', ['boot.options', function (options) {\r\n\r\n        var\r\n            base_core_url    = options.core_url + options.def_api_version + \"/\" + options.def_api_app + '/',\r\n            accounts_url     = options.accounts_url,\r\n            login_url        = options.login_url,\r\n            application_name = options.def_api_app;\r\n\r\n        // Returns Core API Service URL based on Current Application\r\n        this.getAppCoreUrl = function () {\r\n            return base_core_url;\r\n        };\r\n\r\n        this.getAccountsCoreUrl = function () {\r\n            return options.core_url + options.def_api_version + '/accounts/';\r\n        };\r\n\r\n        this.getDriveCoreUrl = function () {\r\n            return options.core_url + options.def_api_version + '/drive/';\r\n        };\r\n\r\n        // Returns Accounts URL\r\n        this.getAccountsUrl = function () {\r\n            return accounts_url;\r\n        };\r\n\r\n        // Returns Login URL\r\n        this.getLoginUrl = function () {\r\n            return login_url;\r\n        };\r\n\r\n        // Returns Application name capitalizing the first letter with UpperCase\r\n        this.getApplicationName = function () {\r\n            return application_name.charAt(0).toUpperCase() + application_name.slice(1);\r\n\r\n        };\r\n\r\n    }]);\r\n}());\r\n","/*global window, angular*/\r\n(function (context, logger) {\r\n    'use strict';\r\n\r\n    // creating namespace\r\n    function Bootstrapper() {\r\n        this.isBootstrapped = false;\r\n    }\r\n\r\n    // boot a module\r\n    Bootstrapper.prototype.Angular = function (root, appname, source, cb) {\r\n        var self = this;\r\n\r\n        // loading file\r\n        context.loader.load(source, function (err, options) {\r\n            // checking errors...\r\n            if (err) {\r\n                logger.warn('Config file not loaded!');\r\n                logger.debug(err);\r\n\r\n            } else {\r\n                // saving boot settings\r\n                angular.module(appname).value('boot.options', options);\r\n            }\r\n\r\n            // starting app\r\n            angular.bootstrap(root, [appname]);\r\n            self.isBootstrapped = true;\r\n\r\n            // calling callback\r\n            if (cb) {\r\n                cb(err);\r\n            }\r\n        });\r\n    };\r\n\r\n    // creating instance\r\n    context.boot = new Bootstrapper();\r\n\r\n}(window.pling, window.console));\r\n","/*global document, window*/\r\n(function (dom, logger, context) {\r\n    \"use strict\";\r\n\r\n    // Content Loaded listener\r\n    function onDOMLoaded() {\r\n\r\n        // detect angular application \"directive\"\r\n        var root,\r\n            directive = \"plg-app\",\r\n            source = \"src\",\r\n            filter = \"[\" + directive + \"]\";\r\n\r\n        // retrieving root element\r\n        root = dom.querySelector(filter);\r\n\r\n        // working on root\r\n        if (root) {\r\n\r\n            // retrieving app name\r\n            context.name = root.getAttribute(directive);\r\n            context.source = root.getAttribute(source) || \"pling.conf.json\";\r\n\r\n            // loading config file\r\n            logger.info('AngularJS 1.x spa check:', true);\r\n            context.boot.Angular(root, context.name, context.source, function (err) {\r\n\r\n                if (err) {\r\n                    logger.error('Could not boot app ', context.name);\r\n                } else {\r\n                    logger.info('Bootstrapped:', context.boot.isBootstrapped);\r\n                }\r\n\r\n            });\r\n\r\n        } else {\r\n            logger.info('AngularJS 1.x spa check:', false);\r\n        }\r\n    }\r\n\r\n    dom.addEventListener('DOMContentLoaded', onDOMLoaded);\r\n\r\n}(document, window.console, window.pling));\r\n","/*global window, XMLHttpRequest*/\r\n(function (context) {\r\n    'use strict';\r\n    // creating namespace\r\n    function ConfLoader() {\r\n        this.settings = null;\r\n    }\r\n\r\n    // loading file\r\n    ConfLoader.prototype.load = function (filepath, cb) {\r\n        var self = this,\r\n            parsed,\r\n            xhr = new XMLHttpRequest();\r\n\r\n        // sending result\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n\r\n                    parsed = JSON.parse(xhr.responseText);\r\n                    self.settings = parsed;\r\n\r\n                    cb(null, parsed);\r\n                } else {\r\n                    cb(\"Error loading file - status \" + xhr.status, {});\r\n                }\r\n            }\r\n        };\r\n\r\n        // handling error\r\n        xhr.onerror = function (err) {\r\n            cb(err);\r\n        };\r\n\r\n        // fetching file\r\n        xhr.open(\"GET\", filepath, true);\r\n        xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\r\n        xhr.send();\r\n    };\r\n\r\n    // creating instance\r\n    context.loader = new ConfLoader();\r\n}(window.pling));\r\n","/*global angular */\r\n(function () {\r\n    'use strict';\r\n\r\n    function CachingService($templateCache, $route, $http) {\r\n\r\n\r\n        this.cacheViews = function (cacheObj, routeObj) {\r\n            // setting defaults\r\n            var partial, r,\r\n                viewCache = cacheObj || $templateCache,\r\n                router = routeObj || $route;\r\n\r\n            // looping routes\r\n            for (r in router.routes) {\r\n                // jslint -object protection\r\n                if (router.routes.hasOwnProperty(r)) {\r\n                    // evaluate partial\r\n                    partial = router.routes[r].templateUrl;\r\n                    if (partial) {\r\n                        // caching route\r\n                        $http.get(partial, {cache: viewCache});\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    CachingService.$inject = ['$templateCache', '$route', '$http'];\r\n\r\n    // registering service\r\n    angular.module('plingUi').service('cacheService', CachingService);\r\n\r\n}());\r\n","/*global angular */\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('plingUi').service('$localstorage', ['$window', function ($window) {\r\n        return {\r\n            remove: function () {\r\n                $window.localStorage.clear();\r\n            },\r\n            set: function (key, value) {\r\n                $window.localStorage[key] = value;\r\n            },\r\n            get: function (key) {\r\n                return $window.localStorage[key];\r\n            },\r\n            setObject: function (key, value) {\r\n                $window.localStorage[key] = JSON.stringify(value);\r\n            },\r\n            getObject: function (key) {\r\n                return JSON.parse($window.localStorage[key] || '{}');\r\n            }\r\n        };\r\n    }]);\r\n}());\r\n","/*global angular */\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('plingUi').service('$sessionstorage', ['$window', function ($window) {\r\n        return {\r\n            remove: function () {\r\n                $window.sessionStorage.clear();\r\n            },\r\n            set: function (key, value) {\r\n                $window.sessionStorage[key] = value;\r\n            },\r\n            get: function (key) {\r\n                return $window.sessionStorage[key];\r\n            },\r\n            setObject: function (key, value) {\r\n                $window.sessionStorage[key] = JSON.stringify(value);\r\n            },\r\n            getObject: function (key) {\r\n                return JSON.parse($window.sessionStorage[key] || '{}');\r\n            }\r\n        };\r\n    }]);\r\n\r\n}());\r\n","/*global angular, console*/\r\n(function () {\r\n    \"use strict\";\r\n\r\n    // defining behaviour\r\n    function PlingUiExceptionHandler($injector) {\r\n\r\n        return function (exception, cause) {\r\n\r\n            // preparing message to be dispatched\r\n            var dispatcher = null,\r\n                logger = null,\r\n                data = {\r\n                    \"error\": exception,\r\n                    \"details\": cause\r\n                };\r\n\r\n            // logging\r\n            logger = $injector.get('$log');\r\n            logger.error(exception);\r\n\r\n            if (cause) {\r\n                logger.debug(cause);\r\n            }\r\n\r\n            // dispatching message\r\n            dispatcher = $injector.get('$rootScope');\r\n            dispatcher.$broadcast('PLINGUI_INTERNAL_ERROR', data);\r\n        };\r\n    }\r\n\r\n    // injecting\r\n    PlingUiExceptionHandler.$inject = ['$injector'];\r\n\r\n    // registering on angular\r\n    angular\r\n        .module(\"plingUi\")\r\n        .factory(\"$exceptionHandler\", PlingUiExceptionHandler);\r\n\r\n}());\r\n","/*global angular, console*/\r\n(function () {\r\n    \"use strict\";\r\n\r\n    // logger definition\r\n    function PlingUiLogger() {\r\n        return function ($delegate) {\r\n            return {\r\n                dispatch: function (method, params) {\r\n                    // defining method\r\n                    var proc = $delegate[method] || $delegate.log,\r\n                        stamp = new Date().toString(),\r\n                        prefix = '[' + stamp + '][' + method + ']::',\r\n                        msg = [],\r\n                        arg;\r\n\r\n                    if (method) {\r\n                        // preparing msg\r\n                        msg.push(prefix);\r\n\r\n                        // joining params\r\n                        for (arg in params) {\r\n                            if (params.hasOwnProperty(arg)) {\r\n                                msg.push(params[arg]);\r\n                            }\r\n                        }\r\n\r\n                        // applying log info\r\n                        proc.apply(null, msg);\r\n                    }\r\n                },\r\n\r\n                log: function () {\r\n                    this.dispatch('log', arguments);\r\n                },\r\n\r\n                info: function () {\r\n                    this.dispatch('info', arguments);\r\n                },\r\n\r\n                error: function () {\r\n                    this.dispatch('error', arguments);\r\n                },\r\n\r\n                warn: function () {\r\n                    this.dispatch('warn', arguments);\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    // registering on angular\r\n    angular\r\n        .module(\"plingUi\")\r\n        .factory(\"shadowLogger\", PlingUiLogger);\r\n}());\r\n","/*global angular*/\r\n\r\n/* More about AngularJS Directives:\r\n    http://weblogs.asp.net/dwahlin/creating-custom-angularjs-directives-part-i-the-fundamentals */\r\n\r\n(function () {\r\n    \"use strict\";\r\n    /*\r\n        AQUI SE CRIA A DIRETIVA\r\n    */\r\n    angular.module('plingUi').directive('plgSample', function () {\r\n\r\n        return {\r\n\r\n            // E = element, A = attribute, C = class, M = comment\r\n            restrict    : 'E',\r\n\r\n            // Your Controller\r\n            controller  : 'MyController',\r\n\r\n            // Your HTML Template\r\n            // You can also use 'template': <div>{{yourScopeVar}}</div>' intead of 'templateUrl'\r\n            templateUrl : 'myComponentSample.html',\r\n\r\n            // DOM manipulation\r\n            link : function ($scope, element, attrs) {\r\n\r\n                element.css('background-color', 'white');\r\n                $scope.tagline = \"it Works! Attrs: \" + attrs;\r\n\r\n            }\r\n        };\r\n\r\n    });\r\n}());\r\n","/*global angular, console, document, $, window, URL*/\r\n(function () {\r\n    'use strict';\r\n\r\n    // creating directive\r\n    function PlgDataTable($log, $compile, $location, $http, $rootScope, core) {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                params: '=',\r\n                serviceModule: '=',\r\n                dynamicForm: '=',\r\n                filterDefault: '=',\r\n                orderBy: '=',\r\n                limit: '=',\r\n                page: '=',\r\n                total: '=',\r\n                viewItems: '=',\r\n                gapiDataTableFilters: '=',\r\n                paginate: '&'\r\n            },\r\n            replace: true,\r\n\r\n            // linking directive\r\n            link: function (scope, element) {\r\n\r\n                var builder, compiledElm;\r\n\r\n                // validating bind value\r\n                if (scope.params) {\r\n                    builder = {\r\n                        buildTemplate: function (scope, cb) {\r\n                            var template;\r\n\r\n                            scope.selected  = []; // DataTable - Checkbox\r\n                            scope.chkList   = false;\r\n\r\n\r\n                            scope.editView      = this.editView;\r\n                            scope.toggleAll     = this.toggleAll;\r\n                            scope.allActions    = this.allActions;\r\n\r\n\r\n                            scope.options = {\r\n                                autoSelect: false,\r\n                                boundaryLinks: false,\r\n                                largeEditDialog: false,\r\n                                pageSelector: false,\r\n                                rowSelection: true\r\n                            };\r\n\r\n                            // input init orderBy... ex: name, type_ip, etc...\r\n                            scope.query = {\r\n                                order: scope.orderBy\r\n                            };\r\n\r\n\r\n                            template =  '<md-content layout=\"column\" flex>' +\r\n                                        '   <md-table-container>' +\r\n                                        '       <table md-table md-row-select=\"options.rowSelection\" ng-model=\"selected\" md-progress=\"promise\" ng-click=\"toggleAll()\">' +\r\n                                        '       <thead md-head md-order=\"query.order\" md-on-reorder=\"logOrder\">' +\r\n                                        '           <tr md-row>' +\r\n                                        '               <th md-column md-order-by=\"{{ header.ref }}\" ng-repeat=\"header in dynamicForm.showInList\"><span>{{ header.label }}</span></th>' +\r\n                                        '           </tr>' +\r\n                                        '       </thead>' +\r\n                                        '       <tbody md-body>' +\r\n                                        '           <tr md-row md-select=\"obj\" md-on-select=\"toggleAll\" md-on-deselect=\"toggleAll\" ng-click=\"editView(serviceModule.module, obj._id)\" md-on-select=\"logItem\" md-auto-select=\"options.autoSelect\" ng-repeat=\"obj in params | filter: filter.search | orderBy: query.order\" style=\"cursor: pointer !important\">' +\r\n                                        '               <td md-cell ng-repeat=\"item in dynamicForm.showInList\">{{obj[item.ref]}}</md-cell>' +\r\n                                        '               <td md-cell ng-show=\"gapiDataTableFilters\">' +\r\n\r\n                                        '                   <plg-data-table-filters' +\r\n                                        '                       params=\"obj\"' +\r\n                                        '                       service-module=\"serviceModule\"' +\r\n                                        '                       dynamic-form=\"dynamicForm\"' +\r\n                                        '                       filter-default=\"filterDefault\">' +\r\n                                        '                   </plg-data-table-filters>' +\r\n\r\n                                        '               </td>' +\r\n                                        '           </tr>' +\r\n                                        '       </tbody>' +\r\n                                        '       </table>' +\r\n                                        '   </md-table-container>' +\r\n\r\n                                        '   <md-table-pagination md-limit=\"limit\" md-page=\"page\" md-total=\"{{total}}\" md-on-paginate=\"paginate()\"></md-table-pagination>' +\r\n\r\n                                        '   <div layout=\"row\" layout-align=\"start start\" class=\"actionDataTable\">' +\r\n                                        '       <md-menu-item ng-show=\"chkList\" ng-repeat=\"item in viewItems\" layout-align=\"center center\">' +\r\n                                        '           <md-button class=\"md-icon-button allActionsIcon\" aria-label=\"Ações\" ng-click=\"allActions(item.method, item.action, item.msg)\">' +\r\n                                        '               <md-tooltip>{{item.name}}</md-tooltip>' +\r\n                                        '               <md-icon md-svg-src=\"{{item.moduleIcon}}\" class=\"icons\"></md-icon>' +\r\n                                        '           </md-button>' +\r\n                                        '       </md-menu-item>' +\r\n                                        '   </div>' +\r\n                                        '</md-content>';\r\n\r\n\r\n                            cb(null, template);\r\n                        },\r\n\r\n                        editView : function (path, id) {\r\n                            $location.path(path + '/' + id);\r\n                        },\r\n\r\n                        // Display \"show / hide\" buttons, ex: Inativar, Excluir...\r\n                        toggleAll : function () {\r\n                            scope.chkList = false;\r\n                            if (scope.selected.length > 0) {\r\n                                scope.chkList = true;\r\n                            }\r\n                        },\r\n\r\n                        // Execute actions ex: Inativar, Excluir...\r\n                        allActions : function (method, action, msg) {\r\n\r\n                            var payload = {};\r\n\r\n                            payload[method] = action;\r\n\r\n\r\n                            scope.selected.forEach(function (obj, index) {\r\n                                /*jslint nomen:true*/\r\n                                $http.patch(core.getAppCoreUrl() + scope.serviceModule.collection + '/' + obj._id, payload)\r\n                                    .success(function (data) {\r\n                                        if (data) {\r\n                                            if (index + 1  === scope.selected.length) {\r\n                                                $rootScope.$emit('saveRecordSuccess', 'Registros ' + msg + ' com sucesso.');\r\n                                            }\r\n                                            scope.selected.length = 0; // Reset \"CHECKBOX checked\"\r\n                                            scope.chkList = false;\r\n                                            $rootScope.$emit('research', [obj], method, action);\r\n                                        } else {\r\n                                            $rootScope.$emit('recordError', 'Ocorreu um erro ao ' + msg);\r\n                                        }\r\n                                    });\r\n                                /*jslint nomen:false*/\r\n                            });\r\n                        }\r\n\r\n                    };\r\n\r\n                    // defining template\r\n                    builder.buildTemplate(scope, function (err, template) {\r\n\r\n                        // handling error\r\n                        if (err) {\r\n                            $log.warn(err);\r\n                            return;\r\n                        }\r\n\r\n                        // compiling template\r\n                        compiledElm = $compile(template)(scope);\r\n\r\n                        // handling post compile hooks\r\n                        if (builder.postCompile) {\r\n                            builder.postCompile(compiledElm);\r\n                        }\r\n\r\n                        // replacing into DOM\r\n                        element.replaceWith(compiledElm);\r\n\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    // injecting dependencies\r\n    PlgDataTable.$inject = ['$log', '$compile', '$location', '$http', '$rootScope', 'coreApiService'];\r\n\r\n    // registering into angular\r\n    angular.module('plingUi').directive('plgDataTable', PlgDataTable);\r\n}());","/*global angular, console, document, $, window, URL*/\r\n(function () {\r\n    'use strict';\r\n\r\n    // creating directive\r\n    function PlgDataTableFilters($rootScope, $log, $compile, $http, core, formatResultList) {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                params: '=',\r\n                serviceModule: '=',\r\n                dynamicForm: '=',\r\n                filterDefault: '='\r\n            },\r\n            replace: true,\r\n\r\n            // linking directive\r\n            link: function (scope, element) {\r\n\r\n                var builder, compiledElm;\r\n\r\n                // validating bind value\r\n                if (scope.params) {\r\n                    builder = {\r\n                        buildTemplate: function (scope, cb) {\r\n                            var template;\r\n\r\n\r\n                            scope.actionsList = this.actionsList;\r\n\r\n\r\n                            //---------------------\r\n                            scope.collection    = scope.serviceModule.collection;\r\n                            scope.module        = scope.serviceModule.module;\r\n                            if (scope.serviceModule.subModuleEdit) {\r\n                                scope.module    = scope.serviceModule.module + '/' + scope.serviceModule.subModuleEdit;\r\n                            }\r\n\r\n                            scope.resultViewItems = formatResultList.action(scope.filterDefault.action, scope.serviceModule.viewItems);\r\n                            //---------------------\r\n\r\n                            template =  '<md-menu md-offset=\"0 -7\" md-position-mode=\"target-right target\">' +\r\n                                        '    <md-button aria-label=\"\" class=\"md-icon-button\" ng-click=\"$mdOpenMenu($event)\" >' +\r\n                                        '        <md-tooltip>Ações</md-tooltip>' +\r\n                                        '        <md-icon md-svg-src=\"assets/images/icone_mais.svg\"></md-icon>' +\r\n                                        '    </md-button>' +\r\n                                        '    <md-menu-content layout=\"column\" layout-wrap width=\"4\" >' +\r\n                                        '        <md-menu-item flex ng-show=\"module\">' +\r\n                                        '           <p><font color=\"#959595\">Alterar Status</font></p>' +\r\n                                        '        </md-menu-item>' +\r\n                                        '        <md-menu-item flex ng-repeat=\"item in resultViewItems\">' +\r\n                                        '            <md-button ng-click=\"actionsList(params, \\'Registro\\', item, collection)\" style=\"margin-left: 15px !important\">' +\r\n                                        '                 <md-icon md-svg-src=\"{{item.moduleIcon}}\"></md-icon>' +\r\n                                        '                 {{item.name}}' +\r\n                                        '            </md-button>' +\r\n                                        '        </md-menu-item>' +\r\n                                        '    </md-menu-content>' +\r\n                                        '</md-menu>';\r\n\r\n                            cb(null, template);\r\n                        },\r\n\r\n                        actionsList: function (param, label, item, collection) {\r\n                            var payload = {},\r\n                                getParam;\r\n\r\n                            /*jslint nomen:true*/\r\n                            getParam                = param._id;\r\n                            /*jslint nomen:false*/\r\n                            payload[item.method]    = item.action;\r\n\r\n                            $http.patch(core.getAppCoreUrl() + collection + '/' + getParam, payload)\r\n                                .success(function (data) {\r\n                                    if (data) {\r\n                                        $rootScope.$emit('saveRecordSuccess', label + ' ' + item.msg + ' com sucesso.');\r\n                                        $rootScope.$emit('research', [param], item.method, item.action);\r\n                                    } else {\r\n                                        $rootScope.$emit('recordError', 'Ocorreu um erro ao ' + item.msg + ' ' + collection);\r\n                                    }\r\n                                });\r\n                        }\r\n\r\n                    };\r\n\r\n                    // defining template\r\n                    builder.buildTemplate(scope, function (err, template) {\r\n\r\n                        // handling error\r\n                        if (err) {\r\n                            $log.warn(err);\r\n                            return;\r\n                        }\r\n\r\n                        // compiling template\r\n                        compiledElm = $compile(template)(scope);\r\n\r\n                        // handling post compile hooks\r\n                        if (builder.postCompile) {\r\n                            builder.postCompile(compiledElm);\r\n                        }\r\n\r\n                        // replacing into DOM\r\n                        element.replaceWith(compiledElm);\r\n\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    // injecting dependencies\r\n    PlgDataTableFilters.$inject = ['$rootScope', '$log', '$compile', '$http', 'coreApiService', 'formatResultList'];\r\n\r\n    // registering into angular\r\n    angular.module('plingUi').directive('plgDataTableFilters', PlgDataTableFilters);\r\n}());\r\n","/*global angular, console, document, $, jQuery, window, URL*/\r\n(function () {\r\n    'use strict';\r\n\r\n    // creating directive\r\n    function PlgDataTableSearch($log, $compile, $rootScope) {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                dynamicForm: '='\r\n            },\r\n            replace: true,\r\n\r\n            // linking directive\r\n            link: function (scope, element) {\r\n\r\n                var builder, compiledElm;\r\n\r\n                builder = {\r\n                    buildTemplate: function (scope, cb) {\r\n\r\n                        var template;\r\n\r\n                        scope.serializeQueryString  = this.serializeQueryString;\r\n                        scope.searchPeople          = this.searchPeople;\r\n                        scope.searchColorActive     = this.searchColorActive;\r\n                        scope.searchColorInactivate = this.searchColorInactivate;\r\n                        scope.colorIconsTrash       = this.colorIconsTrash;\r\n\r\n\r\n                        scope.search                   = [];\r\n                        scope.searchIconsTrash         = 'checkOffColorIconFilter';\r\n                        scope.searchIconsActive        = 'checkOffColorIconFilter';\r\n                        scope.searchIconsInactivate    = 'checkOffColorIconFilter';\r\n\r\n\r\n                        template =  '<div flex=\"25\">' +\r\n                                    '    <md-input-container>' +\r\n                                    '        <label>Pesquisar</label>' +\r\n                                    '        <input ng-model=\"search.search\">' +\r\n                                    '    </md-input-container>' +\r\n                                    '</div>' +\r\n\r\n                                    '<div style=\"margin-left: 20px !important\" flex=\"25\">' +\r\n                                    '    <md-input-container>' +\r\n                                    '        <md-select multiple ng-model=\"search.fieldtable\" placeholder=\"Selecione\">' +\r\n                                    '            <md-option ng-repeat=\"table in dynamicForm.allField\" value=\"{{table.ref}}\">{{table.label}}</md-option>' +\r\n                                    '        </md-select>' +\r\n                                    '    </md-input-container>' +\r\n                                    '</div>' +\r\n\r\n                                    '<div style=\"margin-left: 20px !important\">' +\r\n                                    '    <md-input-container>' +\r\n                                    '        <md-button ng-class=\"searchIconsActive\" class=\"md-icon-button\" ng-click=\"searchColorActive()\">' +\r\n                                    '            <md-tooltip md-direction=\"bottom\">Ativos</md-tooltip>' +\r\n                                    '            <i class=\"material-icons\">done_all</i>' +\r\n                                    '        </md-button>' +\r\n                                    '        <md-button ng-class=\"searchIconsInactivate\" class=\"md-icon-button\" ng-click=\"searchColorInactivate()\">' +\r\n                                    '            <md-tooltip md-direction=\"bottom\">Inativos</md-tooltip>' +\r\n                                    '            <i class=\"material-icons\">highlight_off</i>' +\r\n                                    '        </md-button>' +\r\n                                    '        <md-button ng-class=\"searchIconsTrash\" class=\"md-icon-button\" ng-click=\"colorIconsTrash()\">' +\r\n                                    '            <md-tooltip md-direction=\"bottom\">Excluídos</md-tooltip>' +\r\n                                    '            <i class=\"material-icons\">delete</i>' +\r\n                                    '        </md-button>' +\r\n                                    '    </md-input-container>' +\r\n                                    '</div>' +\r\n\r\n                                    '<md-button ng-click=\"searchPeople(search)\" ng-show=\"search.search || search.fieldtable.length > 0 || search.active || search.inactive || search.trash\" class=\"md-raised\" style=\"font-size: 11px !important;\">Pesquisar</md-button>';\r\n\r\n                        cb(null, template);\r\n                    },\r\n\r\n                    serializeQueryString : function (obj) {\r\n                        var str = [],\r\n                            p;\r\n\r\n                        for (p in obj) {\r\n                            if (obj.hasOwnProperty(p) && encodeURIComponent(obj[p])) {\r\n                                str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n                            }\r\n                        }\r\n\r\n                        if (str.length > 0) {\r\n                            return '&' + str.join(\"&\");\r\n                        }\r\n\r\n                        return str.join(\"&\");\r\n                    },\r\n\r\n                    searchPeople : function (search) {\r\n                        $rootScope.$emit('searchPeople', scope.serializeQueryString(search));\r\n                    },\r\n\r\n                    searchColorActive : function () {\r\n                        if (scope.searchIconsActive === 'checkOffColorIconFilter') {\r\n                            scope.searchIconsActive = 'checkOnColorIconFilter';\r\n                            scope.search.active     = true;\r\n                        } else {\r\n                            scope.searchIconsActive = 'checkOffColorIconFilter';\r\n                            delete scope.search.active;\r\n                        }\r\n                    },\r\n\r\n                    searchColorInactivate : function () {\r\n                        if (scope.searchIconsInactivate === 'checkOffColorIconFilter') {\r\n                            scope.searchIconsInactivate = 'checkOnColorIconFilter';\r\n                            scope.search.inactive       = true;\r\n                        } else {\r\n                            scope.searchIconsInactivate = 'checkOffColorIconFilter';\r\n                            delete scope.search.inactive;\r\n                        }\r\n                    },\r\n\r\n                    colorIconsTrash : function () {\r\n                        if (scope.searchIconsTrash === 'checkOffColorIconFilter') {\r\n                            scope.searchIconsTrash = 'checkOnColorIconFilter';\r\n                            scope.search.trash     = true;\r\n                        } else {\r\n                            scope.searchIconsTrash = 'checkOffColorIconFilter';\r\n                            delete scope.search.trash;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // defining template\r\n                builder.buildTemplate(scope, function (err, template) {\r\n\r\n                    // handling error\r\n                    if (err) {\r\n                        $log.warn(err);\r\n                        return;\r\n                    }\r\n\r\n                    // compiling template\r\n                    compiledElm = $compile(template)(scope);\r\n\r\n                    // handling post compile hooks\r\n                    if (builder.postCompile) {\r\n                        builder.postCompile(compiledElm);\r\n                    }\r\n\r\n                    // replacing into DOM\r\n                    element.replaceWith(compiledElm);\r\n\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    // injecting dependencies\r\n    PlgDataTableSearch.$inject = ['$log', '$compile', '$rootScope'];\r\n\r\n    // registering into angular\r\n    angular.module('plingUi').directive('plgDataTableSearch', PlgDataTableSearch);\r\n}());\r\n","/*!\r\n * ngImgCrop v0.3.2\r\n * https://github.com/alexk111/ngImgCrop\r\n *\r\n * Copyright (c) 2014 Alex Kaul\r\n * License: MIT\r\n *\r\n * Generated at Wednesday, December 3rd, 2014, 3:54:12 PM\r\n */\r\n(function() {\r\n'use strict';\r\n\r\nvar crop = angular.module('plingUi', []);\r\n\r\ncrop.factory('cropAreaCircle', ['cropArea', function(CropArea) {\r\n  var CropAreaCircle = function() {\r\n    CropArea.apply(this, arguments);\r\n\r\n    this._boxResizeBaseSize = 20;\r\n    this._boxResizeNormalRatio = 0.9;\r\n    this._boxResizeHoverRatio = 1.2;\r\n    this._iconMoveNormalRatio = 0.9;\r\n    this._iconMoveHoverRatio = 1.2;\r\n\r\n    this._boxResizeNormalSize = this._boxResizeBaseSize*this._boxResizeNormalRatio;\r\n    this._boxResizeHoverSize = this._boxResizeBaseSize*this._boxResizeHoverRatio;\r\n\r\n    this._posDragStartX=0;\r\n    this._posDragStartY=0;\r\n    this._posResizeStartX=0;\r\n    this._posResizeStartY=0;\r\n    this._posResizeStartSize=0;\r\n\r\n    this._boxResizeIsHover = false;\r\n    this._areaIsHover = false;\r\n    this._boxResizeIsDragging = false;\r\n    this._areaIsDragging = false;\r\n  };\r\n\r\n  CropAreaCircle.prototype = new CropArea();\r\n\r\n  CropAreaCircle.prototype._calcCirclePerimeterCoords=function(angleDegrees) {\r\n    var hSize=this._size/2;\r\n    var angleRadians=angleDegrees * (Math.PI / 180),\r\n        circlePerimeterX=this._x + hSize * Math.cos(angleRadians),\r\n        circlePerimeterY=this._y + hSize * Math.sin(angleRadians);\r\n    return [circlePerimeterX, circlePerimeterY];\r\n  };\r\n\r\n  CropAreaCircle.prototype._calcResizeIconCenterCoords=function() {\r\n    return this._calcCirclePerimeterCoords(-45);\r\n  };\r\n\r\n  CropAreaCircle.prototype._isCoordWithinArea=function(coord) {\r\n    return Math.sqrt((coord[0]-this._x)*(coord[0]-this._x) + (coord[1]-this._y)*(coord[1]-this._y)) < this._size/2;\r\n  };\r\n  CropAreaCircle.prototype._isCoordWithinBoxResize=function(coord) {\r\n    var resizeIconCenterCoords=this._calcResizeIconCenterCoords();\r\n    var hSize=this._boxResizeHoverSize/2;\r\n    return(coord[0] > resizeIconCenterCoords[0] - hSize && coord[0] < resizeIconCenterCoords[0] + hSize &&\r\n           coord[1] > resizeIconCenterCoords[1] - hSize && coord[1] < resizeIconCenterCoords[1] + hSize);\r\n  };\r\n\r\n  CropAreaCircle.prototype._drawArea=function(ctx,centerCoords,size){\r\n    ctx.arc(centerCoords[0],centerCoords[1],size/2,0,2*Math.PI);\r\n  };\r\n\r\n  CropAreaCircle.prototype.draw=function() {\r\n    CropArea.prototype.draw.apply(this, arguments);\r\n\r\n    // draw move icon\r\n    this._cropCanvas.drawIconMove([this._x,this._y], this._areaIsHover?this._iconMoveHoverRatio:this._iconMoveNormalRatio);\r\n\r\n    // draw resize cubes\r\n    this._cropCanvas.drawIconResizeBoxNESW(this._calcResizeIconCenterCoords(), this._boxResizeBaseSize, this._boxResizeIsHover?this._boxResizeHoverRatio:this._boxResizeNormalRatio);\r\n  };\r\n\r\n  CropAreaCircle.prototype.processMouseMove=function(mouseCurX, mouseCurY) {\r\n    var cursor='default';\r\n    var res=false;\r\n\r\n    this._boxResizeIsHover = false;\r\n    this._areaIsHover = false;\r\n\r\n    if (this._areaIsDragging) {\r\n      this._x = mouseCurX - this._posDragStartX;\r\n      this._y = mouseCurY - this._posDragStartY;\r\n      this._areaIsHover = true;\r\n      cursor='move';\r\n      res=true;\r\n      this._events.trigger('area-move');\r\n    } else if (this._boxResizeIsDragging) {\r\n        cursor = 'nesw-resize';\r\n        var iFR, iFX, iFY;\r\n        iFX = mouseCurX - this._posResizeStartX;\r\n        iFY = this._posResizeStartY - mouseCurY;\r\n        if(iFX>iFY) {\r\n          iFR = this._posResizeStartSize + iFY*2;\r\n        } else {\r\n          iFR = this._posResizeStartSize + iFX*2;\r\n        }\r\n\r\n        this._size = Math.max(this._minSize, iFR);\r\n        this._boxResizeIsHover = true;\r\n        res=true;\r\n        this._events.trigger('area-resize');\r\n    } else if (this._isCoordWithinBoxResize([mouseCurX,mouseCurY])) {\r\n        cursor = 'nesw-resize';\r\n        this._areaIsHover = false;\r\n        this._boxResizeIsHover = true;\r\n        res=true;\r\n    } else if(this._isCoordWithinArea([mouseCurX,mouseCurY])) {\r\n        cursor = 'move';\r\n        this._areaIsHover = true;\r\n        res=true;\r\n    }\r\n\r\n    this._dontDragOutside();\r\n    angular.element(this._ctx.canvas).css({'cursor': cursor});\r\n\r\n    return res;\r\n  };\r\n\r\n  CropAreaCircle.prototype.processMouseDown=function(mouseDownX, mouseDownY) {\r\n    if (this._isCoordWithinBoxResize([mouseDownX,mouseDownY])) {\r\n      this._areaIsDragging = false;\r\n      this._areaIsHover = false;\r\n      this._boxResizeIsDragging = true;\r\n      this._boxResizeIsHover = true;\r\n      this._posResizeStartX=mouseDownX;\r\n      this._posResizeStartY=mouseDownY;\r\n      this._posResizeStartSize = this._size;\r\n      this._events.trigger('area-resize-start');\r\n    } else if (this._isCoordWithinArea([mouseDownX,mouseDownY])) {\r\n      this._areaIsDragging = true;\r\n      this._areaIsHover = true;\r\n      this._boxResizeIsDragging = false;\r\n      this._boxResizeIsHover = false;\r\n      this._posDragStartX = mouseDownX - this._x;\r\n      this._posDragStartY = mouseDownY - this._y;\r\n      this._events.trigger('area-move-start');\r\n    }\r\n  };\r\n\r\n  CropAreaCircle.prototype.processMouseUp=function(/*mouseUpX, mouseUpY*/) {\r\n    if(this._areaIsDragging) {\r\n      this._areaIsDragging = false;\r\n      this._events.trigger('area-move-end');\r\n    }\r\n    if(this._boxResizeIsDragging) {\r\n      this._boxResizeIsDragging = false;\r\n      this._events.trigger('area-resize-end');\r\n    }\r\n    this._areaIsHover = false;\r\n    this._boxResizeIsHover = false;\r\n\r\n    this._posDragStartX = 0;\r\n    this._posDragStartY = 0;\r\n  };\r\n\r\n  return CropAreaCircle;\r\n}]);\r\n\r\n\r\n\r\ncrop.factory('cropAreaSquare', ['cropArea', function(CropArea) {\r\n  var CropAreaSquare = function() {\r\n    CropArea.apply(this, arguments);\r\n\r\n    this._resizeCtrlBaseRadius = 10;\r\n    this._resizeCtrlNormalRatio = 0.75;\r\n    this._resizeCtrlHoverRatio = 1;\r\n    this._iconMoveNormalRatio = 0.9;\r\n    this._iconMoveHoverRatio = 1.2;\r\n\r\n    this._resizeCtrlNormalRadius = this._resizeCtrlBaseRadius*this._resizeCtrlNormalRatio;\r\n    this._resizeCtrlHoverRadius = this._resizeCtrlBaseRadius*this._resizeCtrlHoverRatio;\r\n\r\n    this._posDragStartX=0;\r\n    this._posDragStartY=0;\r\n    this._posResizeStartX=0;\r\n    this._posResizeStartY=0;\r\n    this._posResizeStartSize=0;\r\n\r\n    this._resizeCtrlIsHover = -1;\r\n    this._areaIsHover = false;\r\n    this._resizeCtrlIsDragging = -1;\r\n    this._areaIsDragging = false;\r\n  };\r\n\r\n  CropAreaSquare.prototype = new CropArea();\r\n\r\n  CropAreaSquare.prototype._calcSquareCorners=function() {\r\n    var hSize=this._size/2;\r\n    return [\r\n      [this._x-hSize, this._y-hSize],\r\n      [this._x+hSize, this._y-hSize],\r\n      [this._x-hSize, this._y+hSize],\r\n      [this._x+hSize, this._y+hSize]\r\n    ];\r\n  };\r\n\r\n  CropAreaSquare.prototype._calcSquareDimensions=function() {\r\n    var hSize=this._size/2;\r\n    return {\r\n      left: this._x-hSize,\r\n      top: this._y-hSize,\r\n      right: this._x+hSize,\r\n      bottom: this._y+hSize\r\n    };\r\n  };\r\n\r\n  CropAreaSquare.prototype._isCoordWithinArea=function(coord) {\r\n    var squareDimensions=this._calcSquareDimensions();\r\n    return (coord[0]>=squareDimensions.left&&coord[0]<=squareDimensions.right&&coord[1]>=squareDimensions.top&&coord[1]<=squareDimensions.bottom);\r\n  };\r\n\r\n  CropAreaSquare.prototype._isCoordWithinResizeCtrl=function(coord) {\r\n    var resizeIconsCenterCoords=this._calcSquareCorners();\r\n    var res=-1;\r\n    for(var i=0,len=resizeIconsCenterCoords.length;i<len;i++) {\r\n      var resizeIconCenterCoords=resizeIconsCenterCoords[i];\r\n      if(coord[0] > resizeIconCenterCoords[0] - this._resizeCtrlHoverRadius && coord[0] < resizeIconCenterCoords[0] + this._resizeCtrlHoverRadius &&\r\n         coord[1] > resizeIconCenterCoords[1] - this._resizeCtrlHoverRadius && coord[1] < resizeIconCenterCoords[1] + this._resizeCtrlHoverRadius) {\r\n        res=i;\r\n        break;\r\n      }\r\n    }\r\n    return res;\r\n  };\r\n\r\n  CropAreaSquare.prototype._drawArea=function(ctx,centerCoords,size){\r\n    var hSize=size/2;\r\n    ctx.rect(centerCoords[0]-hSize,centerCoords[1]-hSize,size,size);\r\n  };\r\n\r\n  CropAreaSquare.prototype.draw=function() {\r\n    CropArea.prototype.draw.apply(this, arguments);\r\n\r\n    // draw move icon\r\n    this._cropCanvas.drawIconMove([this._x,this._y], this._areaIsHover?this._iconMoveHoverRatio:this._iconMoveNormalRatio);\r\n\r\n    // draw resize cubes\r\n    var resizeIconsCenterCoords=this._calcSquareCorners();\r\n    for(var i=0,len=resizeIconsCenterCoords.length;i<len;i++) {\r\n      var resizeIconCenterCoords=resizeIconsCenterCoords[i];\r\n      this._cropCanvas.drawIconResizeCircle(resizeIconCenterCoords, this._resizeCtrlBaseRadius, this._resizeCtrlIsHover===i?this._resizeCtrlHoverRatio:this._resizeCtrlNormalRatio);\r\n    }\r\n  };\r\n\r\n  CropAreaSquare.prototype.processMouseMove=function(mouseCurX, mouseCurY) {\r\n    var cursor='default';\r\n    var res=false;\r\n\r\n    this._resizeCtrlIsHover = -1;\r\n    this._areaIsHover = false;\r\n\r\n    if (this._areaIsDragging) {\r\n      this._x = mouseCurX - this._posDragStartX;\r\n      this._y = mouseCurY - this._posDragStartY;\r\n      this._areaIsHover = true;\r\n      cursor='move';\r\n      res=true;\r\n      this._events.trigger('area-move');\r\n    } else if (this._resizeCtrlIsDragging>-1) {\r\n      var xMulti, yMulti;\r\n      switch(this._resizeCtrlIsDragging) {\r\n        case 0: // Top Left\r\n          xMulti=-1;\r\n          yMulti=-1;\r\n          cursor = 'nwse-resize';\r\n          break;\r\n        case 1: // Top Right\r\n          xMulti=1;\r\n          yMulti=-1;\r\n          cursor = 'nesw-resize';\r\n          break;\r\n        case 2: // Bottom Left\r\n          xMulti=-1;\r\n          yMulti=1;\r\n          cursor = 'nesw-resize';\r\n          break;\r\n        case 3: // Bottom Right\r\n          xMulti=1;\r\n          yMulti=1;\r\n          cursor = 'nwse-resize';\r\n          break;\r\n      }\r\n      var iFX = (mouseCurX - this._posResizeStartX)*xMulti;\r\n      var iFY = (mouseCurY - this._posResizeStartY)*yMulti;\r\n      var iFR;\r\n      if(iFX>iFY) {\r\n        iFR = this._posResizeStartSize + iFY;\r\n      } else {\r\n        iFR = this._posResizeStartSize + iFX;\r\n      }\r\n      var wasSize=this._size;\r\n      this._size = Math.max(this._minSize, iFR);\r\n      var posModifier=(this._size-wasSize)/2;\r\n      this._x+=posModifier*xMulti;\r\n      this._y+=posModifier*yMulti;\r\n      this._resizeCtrlIsHover = this._resizeCtrlIsDragging;\r\n      res=true;\r\n      this._events.trigger('area-resize');\r\n    } else {\r\n      var hoveredResizeBox=this._isCoordWithinResizeCtrl([mouseCurX,mouseCurY]);\r\n      if (hoveredResizeBox>-1) {\r\n        switch(hoveredResizeBox) {\r\n          case 0:\r\n            cursor = 'nwse-resize';\r\n            break;\r\n          case 1:\r\n            cursor = 'nesw-resize';\r\n            break;\r\n          case 2:\r\n            cursor = 'nesw-resize';\r\n            break;\r\n          case 3:\r\n            cursor = 'nwse-resize';\r\n            break;\r\n        }\r\n        this._areaIsHover = false;\r\n        this._resizeCtrlIsHover = hoveredResizeBox;\r\n        res=true;\r\n      } else if(this._isCoordWithinArea([mouseCurX,mouseCurY])) {\r\n        cursor = 'move';\r\n        this._areaIsHover = true;\r\n        res=true;\r\n      }\r\n    }\r\n\r\n    this._dontDragOutside();\r\n    angular.element(this._ctx.canvas).css({'cursor': cursor});\r\n\r\n    return res;\r\n  };\r\n\r\n  CropAreaSquare.prototype.processMouseDown=function(mouseDownX, mouseDownY) {\r\n    var isWithinResizeCtrl=this._isCoordWithinResizeCtrl([mouseDownX,mouseDownY]);\r\n    if (isWithinResizeCtrl>-1) {\r\n      this._areaIsDragging = false;\r\n      this._areaIsHover = false;\r\n      this._resizeCtrlIsDragging = isWithinResizeCtrl;\r\n      this._resizeCtrlIsHover = isWithinResizeCtrl;\r\n      this._posResizeStartX=mouseDownX;\r\n      this._posResizeStartY=mouseDownY;\r\n      this._posResizeStartSize = this._size;\r\n      this._events.trigger('area-resize-start');\r\n    } else if (this._isCoordWithinArea([mouseDownX,mouseDownY])) {\r\n      this._areaIsDragging = true;\r\n      this._areaIsHover = true;\r\n      this._resizeCtrlIsDragging = -1;\r\n      this._resizeCtrlIsHover = -1;\r\n      this._posDragStartX = mouseDownX - this._x;\r\n      this._posDragStartY = mouseDownY - this._y;\r\n      this._events.trigger('area-move-start');\r\n    }\r\n  };\r\n\r\n  CropAreaSquare.prototype.processMouseUp=function(/*mouseUpX, mouseUpY*/) {\r\n    if(this._areaIsDragging) {\r\n      this._areaIsDragging = false;\r\n      this._events.trigger('area-move-end');\r\n    }\r\n    if(this._resizeCtrlIsDragging>-1) {\r\n      this._resizeCtrlIsDragging = -1;\r\n      this._events.trigger('area-resize-end');\r\n    }\r\n    this._areaIsHover = false;\r\n    this._resizeCtrlIsHover = -1;\r\n\r\n    this._posDragStartX = 0;\r\n    this._posDragStartY = 0;\r\n  };\r\n\r\n  return CropAreaSquare;\r\n}]);\r\n\r\ncrop.factory('cropArea', ['cropCanvas', function(CropCanvas) {\r\n  var CropArea = function(ctx, events) {\r\n    this._ctx=ctx;\r\n    this._events=events;\r\n\r\n    this._minSize=80;\r\n\r\n    this._cropCanvas=new CropCanvas(ctx);\r\n\r\n    this._image=new Image();\r\n    this._x = 0;\r\n    this._y = 0;\r\n    this._size = 200;\r\n  };\r\n\r\n  /* GETTERS/SETTERS */\r\n\r\n  CropArea.prototype.getImage = function () {\r\n    return this._image;\r\n  };\r\n  CropArea.prototype.setImage = function (image) {\r\n    this._image = image;\r\n  };\r\n\r\n  CropArea.prototype.getX = function () {\r\n    return this._x;\r\n  };\r\n  CropArea.prototype.setX = function (x) {\r\n    this._x = x;\r\n    this._dontDragOutside();\r\n  };\r\n\r\n  CropArea.prototype.getY = function () {\r\n    return this._y;\r\n  };\r\n  CropArea.prototype.setY = function (y) {\r\n    this._y = y;\r\n    this._dontDragOutside();\r\n  };\r\n\r\n  CropArea.prototype.getSize = function () {\r\n    return this._size;\r\n  };\r\n  CropArea.prototype.setSize = function (size) {\r\n    this._size = Math.max(this._minSize, size);\r\n    this._dontDragOutside();\r\n  };\r\n\r\n  CropArea.prototype.getMinSize = function () {\r\n    return this._minSize;\r\n  };\r\n  CropArea.prototype.setMinSize = function (size) {\r\n    this._minSize = size;\r\n    this._size = Math.max(this._minSize, this._size);\r\n    this._dontDragOutside();\r\n  };\r\n\r\n  /* FUNCTIONS */\r\n  CropArea.prototype._dontDragOutside=function() {\r\n    var h=this._ctx.canvas.height,\r\n        w=this._ctx.canvas.width;\r\n    if(this._size>w) { this._size=w; }\r\n    if(this._size>h) { this._size=h; }\r\n    if(this._x<this._size/2) { this._x=this._size/2; }\r\n    if(this._x>w-this._size/2) { this._x=w-this._size/2; }\r\n    if(this._y<this._size/2) { this._y=this._size/2; }\r\n    if(this._y>h-this._size/2) { this._y=h-this._size/2; }\r\n  };\r\n\r\n  CropArea.prototype._drawArea=function() {};\r\n\r\n  CropArea.prototype.draw=function() {\r\n    // draw crop area\r\n    this._cropCanvas.drawCropArea(this._image,[this._x,this._y],this._size,this._drawArea);\r\n  };\r\n\r\n  CropArea.prototype.processMouseMove=function() {};\r\n\r\n  CropArea.prototype.processMouseDown=function() {};\r\n\r\n  CropArea.prototype.processMouseUp=function() {};\r\n\r\n  return CropArea;\r\n}]);\r\n\r\ncrop.factory('cropCanvas', [function() {\r\n  // Shape = Array of [x,y]; [0, 0] - center\r\n  var shapeArrowNW=[[-0.5,-2],[-3,-4.5],[-0.5,-7],[-7,-7],[-7,-0.5],[-4.5,-3],[-2,-0.5]];\r\n  var shapeArrowNE=[[0.5,-2],[3,-4.5],[0.5,-7],[7,-7],[7,-0.5],[4.5,-3],[2,-0.5]];\r\n  var shapeArrowSW=[[-0.5,2],[-3,4.5],[-0.5,7],[-7,7],[-7,0.5],[-4.5,3],[-2,0.5]];\r\n  var shapeArrowSE=[[0.5,2],[3,4.5],[0.5,7],[7,7],[7,0.5],[4.5,3],[2,0.5]];\r\n  var shapeArrowN=[[-1.5,-2.5],[-1.5,-6],[-5,-6],[0,-11],[5,-6],[1.5,-6],[1.5,-2.5]];\r\n  var shapeArrowW=[[-2.5,-1.5],[-6,-1.5],[-6,-5],[-11,0],[-6,5],[-6,1.5],[-2.5,1.5]];\r\n  var shapeArrowS=[[-1.5,2.5],[-1.5,6],[-5,6],[0,11],[5,6],[1.5,6],[1.5,2.5]];\r\n  var shapeArrowE=[[2.5,-1.5],[6,-1.5],[6,-5],[11,0],[6,5],[6,1.5],[2.5,1.5]];\r\n\r\n  // Colors\r\n  var colors={\r\n    areaOutline: '#fff',\r\n    resizeBoxStroke: '#fff',\r\n    resizeBoxFill: '#444',\r\n    resizeBoxArrowFill: '#fff',\r\n    resizeCircleStroke: '#fff',\r\n    resizeCircleFill: '#444',\r\n    moveIconFill: '#fff'\r\n  };\r\n\r\n  return function(ctx){\r\n\r\n    /* Base functions */\r\n\r\n    // Calculate Point\r\n    var calcPoint=function(point,offset,scale) {\r\n        return [scale*point[0]+offset[0], scale*point[1]+offset[1]];\r\n    };\r\n\r\n    // Draw Filled Polygon\r\n    var drawFilledPolygon=function(shape,fillStyle,centerCoords,scale) {\r\n        ctx.save();\r\n        ctx.fillStyle = fillStyle;\r\n        ctx.beginPath();\r\n        var pc, pc0=calcPoint(shape[0],centerCoords,scale);\r\n        ctx.moveTo(pc0[0],pc0[1]);\r\n\r\n        for(var p in shape) {\r\n            if (p > 0) {\r\n                pc=calcPoint(shape[p],centerCoords,scale);\r\n                ctx.lineTo(pc[0],pc[1]);\r\n            }\r\n        }\r\n\r\n        ctx.lineTo(pc0[0],pc0[1]);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n        ctx.restore();\r\n    };\r\n\r\n    /* Icons */\r\n\r\n    this.drawIconMove=function(centerCoords, scale) {\r\n      drawFilledPolygon(shapeArrowN, colors.moveIconFill, centerCoords, scale);\r\n      drawFilledPolygon(shapeArrowW, colors.moveIconFill, centerCoords, scale);\r\n      drawFilledPolygon(shapeArrowS, colors.moveIconFill, centerCoords, scale);\r\n      drawFilledPolygon(shapeArrowE, colors.moveIconFill, centerCoords, scale);\r\n    };\r\n\r\n    this.drawIconResizeCircle=function(centerCoords, circleRadius, scale) {\r\n      var scaledCircleRadius=circleRadius*scale;\r\n      ctx.save();\r\n      ctx.strokeStyle = colors.resizeCircleStroke;\r\n      ctx.lineWidth = 2;\r\n      ctx.fillStyle = colors.resizeCircleFill;\r\n      ctx.beginPath();\r\n      ctx.arc(centerCoords[0],centerCoords[1],scaledCircleRadius,0,2*Math.PI);\r\n      ctx.fill();\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n      ctx.restore();\r\n    };\r\n\r\n    this.drawIconResizeBoxBase=function(centerCoords, boxSize, scale) {\r\n      var scaledBoxSize=boxSize*scale;\r\n      ctx.save();\r\n      ctx.strokeStyle = colors.resizeBoxStroke;\r\n      ctx.lineWidth = 2;\r\n      ctx.fillStyle = colors.resizeBoxFill;\r\n      ctx.fillRect(centerCoords[0] - scaledBoxSize/2, centerCoords[1] - scaledBoxSize/2, scaledBoxSize, scaledBoxSize);\r\n      ctx.strokeRect(centerCoords[0] - scaledBoxSize/2, centerCoords[1] - scaledBoxSize/2, scaledBoxSize, scaledBoxSize);\r\n      ctx.restore();\r\n    };\r\n    this.drawIconResizeBoxNESW=function(centerCoords, boxSize, scale) {\r\n      this.drawIconResizeBoxBase(centerCoords, boxSize, scale);\r\n      drawFilledPolygon(shapeArrowNE, colors.resizeBoxArrowFill, centerCoords, scale);\r\n      drawFilledPolygon(shapeArrowSW, colors.resizeBoxArrowFill, centerCoords, scale);\r\n    };\r\n    this.drawIconResizeBoxNWSE=function(centerCoords, boxSize, scale) {\r\n      this.drawIconResizeBoxBase(centerCoords, boxSize, scale);\r\n      drawFilledPolygon(shapeArrowNW, colors.resizeBoxArrowFill, centerCoords, scale);\r\n      drawFilledPolygon(shapeArrowSE, colors.resizeBoxArrowFill, centerCoords, scale);\r\n    };\r\n\r\n    /* Crop Area */\r\n\r\n    this.drawCropArea=function(image, centerCoords, size, fnDrawClipPath) {\r\n      var xRatio=image.width/ctx.canvas.width,\r\n          yRatio=image.height/ctx.canvas.height,\r\n          xLeft=centerCoords[0]-size/2,\r\n          yTop=centerCoords[1]-size/2;\r\n\r\n      ctx.save();\r\n      ctx.strokeStyle = colors.areaOutline;\r\n      ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      fnDrawClipPath(ctx, centerCoords, size);\r\n      ctx.stroke();\r\n      ctx.clip();\r\n\r\n      // draw part of original image\r\n      if (size > 0) {\r\n          ctx.drawImage(image, xLeft*xRatio, yTop*yRatio, size*xRatio, size*yRatio, xLeft, yTop, size, size);\r\n      }\r\n\r\n      ctx.beginPath();\r\n      fnDrawClipPath(ctx, centerCoords, size);\r\n      ctx.stroke();\r\n      ctx.clip();\r\n\r\n      ctx.restore();\r\n    };\r\n\r\n  };\r\n}]);\r\n\r\n/**\r\n * EXIF service is based on the exif-js library (https://github.com/jseidelin/exif-js)\r\n */\r\n\r\ncrop.service('cropEXIF', [function() {\r\n  var debug = false;\r\n\r\n  var ExifTags = this.Tags = {\r\n\r\n      // version tags\r\n      0x9000 : \"ExifVersion\",             // EXIF version\r\n      0xA000 : \"FlashpixVersion\",         // Flashpix format version\r\n\r\n      // colorspace tags\r\n      0xA001 : \"ColorSpace\",              // Color space information tag\r\n\r\n      // image configuration\r\n      0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\r\n      0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\r\n      0x9101 : \"ComponentsConfiguration\", // Information about channels\r\n      0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\r\n\r\n      // user information\r\n      0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\r\n      0x9286 : \"UserComment\",             // Comments by user\r\n\r\n      // related file\r\n      0xA004 : \"RelatedSoundFile\",        // Name of related sound file\r\n\r\n      // date and time\r\n      0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\r\n      0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\r\n      0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\r\n      0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\r\n      0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\r\n\r\n      // picture-taking conditions\r\n      0x829A : \"ExposureTime\",            // Exposure time (in seconds)\r\n      0x829D : \"FNumber\",                 // F number\r\n      0x8822 : \"ExposureProgram\",         // Exposure program\r\n      0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\r\n      0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\r\n      0x8828 : \"OECF\",                    // Optoelectric conversion factor\r\n      0x9201 : \"ShutterSpeedValue\",       // Shutter speed\r\n      0x9202 : \"ApertureValue\",           // Lens aperture\r\n      0x9203 : \"BrightnessValue\",         // Value of brightness\r\n      0x9204 : \"ExposureBias\",            // Exposure bias\r\n      0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\r\n      0x9206 : \"SubjectDistance\",         // Distance to subject in meters\r\n      0x9207 : \"MeteringMode\",            // Metering mode\r\n      0x9208 : \"LightSource\",             // Kind of light source\r\n      0x9209 : \"Flash\",                   // Flash status\r\n      0x9214 : \"SubjectArea\",             // Location and area of main subject\r\n      0x920A : \"FocalLength\",             // Focal length of the lens in mm\r\n      0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\r\n      0xA20C : \"SpatialFrequencyResponse\",    //\r\n      0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\r\n      0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\r\n      0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\r\n      0xA214 : \"SubjectLocation\",         // Location of subject in image\r\n      0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\r\n      0xA217 : \"SensingMethod\",           // Image sensor type\r\n      0xA300 : \"FileSource\",              // Image source (3 == DSC)\r\n      0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\r\n      0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\r\n      0xA401 : \"CustomRendered\",          // Special processing\r\n      0xA402 : \"ExposureMode\",            // Exposure mode\r\n      0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\r\n      0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\r\n      0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\r\n      0xA406 : \"SceneCaptureType\",        // Type of scene\r\n      0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\r\n      0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\r\n      0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\r\n      0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\r\n      0xA40B : \"DeviceSettingDescription\",    //\r\n      0xA40C : \"SubjectDistanceRange\",    // Distance to subject\r\n\r\n      // other tags\r\n      0xA005 : \"InteroperabilityIFDPointer\",\r\n      0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\r\n  };\r\n\r\n  var TiffTags = this.TiffTags = {\r\n      0x0100 : \"ImageWidth\",\r\n      0x0101 : \"ImageHeight\",\r\n      0x8769 : \"ExifIFDPointer\",\r\n      0x8825 : \"GPSInfoIFDPointer\",\r\n      0xA005 : \"InteroperabilityIFDPointer\",\r\n      0x0102 : \"BitsPerSample\",\r\n      0x0103 : \"Compression\",\r\n      0x0106 : \"PhotometricInterpretation\",\r\n      0x0112 : \"Orientation\",\r\n      0x0115 : \"SamplesPerPixel\",\r\n      0x011C : \"PlanarConfiguration\",\r\n      0x0212 : \"YCbCrSubSampling\",\r\n      0x0213 : \"YCbCrPositioning\",\r\n      0x011A : \"XResolution\",\r\n      0x011B : \"YResolution\",\r\n      0x0128 : \"ResolutionUnit\",\r\n      0x0111 : \"StripOffsets\",\r\n      0x0116 : \"RowsPerStrip\",\r\n      0x0117 : \"StripByteCounts\",\r\n      0x0201 : \"JPEGInterchangeFormat\",\r\n      0x0202 : \"JPEGInterchangeFormatLength\",\r\n      0x012D : \"TransferFunction\",\r\n      0x013E : \"WhitePoint\",\r\n      0x013F : \"PrimaryChromaticities\",\r\n      0x0211 : \"YCbCrCoefficients\",\r\n      0x0214 : \"ReferenceBlackWhite\",\r\n      0x0132 : \"DateTime\",\r\n      0x010E : \"ImageDescription\",\r\n      0x010F : \"Make\",\r\n      0x0110 : \"Model\",\r\n      0x0131 : \"Software\",\r\n      0x013B : \"Artist\",\r\n      0x8298 : \"Copyright\"\r\n  };\r\n\r\n  var GPSTags = this.GPSTags = {\r\n      0x0000 : \"GPSVersionID\",\r\n      0x0001 : \"GPSLatitudeRef\",\r\n      0x0002 : \"GPSLatitude\",\r\n      0x0003 : \"GPSLongitudeRef\",\r\n      0x0004 : \"GPSLongitude\",\r\n      0x0005 : \"GPSAltitudeRef\",\r\n      0x0006 : \"GPSAltitude\",\r\n      0x0007 : \"GPSTimeStamp\",\r\n      0x0008 : \"GPSSatellites\",\r\n      0x0009 : \"GPSStatus\",\r\n      0x000A : \"GPSMeasureMode\",\r\n      0x000B : \"GPSDOP\",\r\n      0x000C : \"GPSSpeedRef\",\r\n      0x000D : \"GPSSpeed\",\r\n      0x000E : \"GPSTrackRef\",\r\n      0x000F : \"GPSTrack\",\r\n      0x0010 : \"GPSImgDirectionRef\",\r\n      0x0011 : \"GPSImgDirection\",\r\n      0x0012 : \"GPSMapDatum\",\r\n      0x0013 : \"GPSDestLatitudeRef\",\r\n      0x0014 : \"GPSDestLatitude\",\r\n      0x0015 : \"GPSDestLongitudeRef\",\r\n      0x0016 : \"GPSDestLongitude\",\r\n      0x0017 : \"GPSDestBearingRef\",\r\n      0x0018 : \"GPSDestBearing\",\r\n      0x0019 : \"GPSDestDistanceRef\",\r\n      0x001A : \"GPSDestDistance\",\r\n      0x001B : \"GPSProcessingMethod\",\r\n      0x001C : \"GPSAreaInformation\",\r\n      0x001D : \"GPSDateStamp\",\r\n      0x001E : \"GPSDifferential\"\r\n  };\r\n\r\n  var StringValues = this.StringValues = {\r\n      ExposureProgram : {\r\n          0 : \"Not defined\",\r\n          1 : \"Manual\",\r\n          2 : \"Normal program\",\r\n          3 : \"Aperture priority\",\r\n          4 : \"Shutter priority\",\r\n          5 : \"Creative program\",\r\n          6 : \"Action program\",\r\n          7 : \"Portrait mode\",\r\n          8 : \"Landscape mode\"\r\n      },\r\n      MeteringMode : {\r\n          0 : \"Unknown\",\r\n          1 : \"Average\",\r\n          2 : \"CenterWeightedAverage\",\r\n          3 : \"Spot\",\r\n          4 : \"MultiSpot\",\r\n          5 : \"Pattern\",\r\n          6 : \"Partial\",\r\n          255 : \"Other\"\r\n      },\r\n      LightSource : {\r\n          0 : \"Unknown\",\r\n          1 : \"Daylight\",\r\n          2 : \"Fluorescent\",\r\n          3 : \"Tungsten (incandescent light)\",\r\n          4 : \"Flash\",\r\n          9 : \"Fine weather\",\r\n          10 : \"Cloudy weather\",\r\n          11 : \"Shade\",\r\n          12 : \"Daylight fluorescent (D 5700 - 7100K)\",\r\n          13 : \"Day white fluorescent (N 4600 - 5400K)\",\r\n          14 : \"Cool white fluorescent (W 3900 - 4500K)\",\r\n          15 : \"White fluorescent (WW 3200 - 3700K)\",\r\n          17 : \"Standard light A\",\r\n          18 : \"Standard light B\",\r\n          19 : \"Standard light C\",\r\n          20 : \"D55\",\r\n          21 : \"D65\",\r\n          22 : \"D75\",\r\n          23 : \"D50\",\r\n          24 : \"ISO studio tungsten\",\r\n          255 : \"Other\"\r\n      },\r\n      Flash : {\r\n          0x0000 : \"Flash did not fire\",\r\n          0x0001 : \"Flash fired\",\r\n          0x0005 : \"Strobe return light not detected\",\r\n          0x0007 : \"Strobe return light detected\",\r\n          0x0009 : \"Flash fired, compulsory flash mode\",\r\n          0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\r\n          0x000F : \"Flash fired, compulsory flash mode, return light detected\",\r\n          0x0010 : \"Flash did not fire, compulsory flash mode\",\r\n          0x0018 : \"Flash did not fire, auto mode\",\r\n          0x0019 : \"Flash fired, auto mode\",\r\n          0x001D : \"Flash fired, auto mode, return light not detected\",\r\n          0x001F : \"Flash fired, auto mode, return light detected\",\r\n          0x0020 : \"No flash function\",\r\n          0x0041 : \"Flash fired, red-eye reduction mode\",\r\n          0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\r\n          0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\r\n          0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\r\n          0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\r\n          0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\r\n          0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\r\n          0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\r\n          0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\r\n      },\r\n      SensingMethod : {\r\n          1 : \"Not defined\",\r\n          2 : \"One-chip color area sensor\",\r\n          3 : \"Two-chip color area sensor\",\r\n          4 : \"Three-chip color area sensor\",\r\n          5 : \"Color sequential area sensor\",\r\n          7 : \"Trilinear sensor\",\r\n          8 : \"Color sequential linear sensor\"\r\n      },\r\n      SceneCaptureType : {\r\n          0 : \"Standard\",\r\n          1 : \"Landscape\",\r\n          2 : \"Portrait\",\r\n          3 : \"Night scene\"\r\n      },\r\n      SceneType : {\r\n          1 : \"Directly photographed\"\r\n      },\r\n      CustomRendered : {\r\n          0 : \"Normal process\",\r\n          1 : \"Custom process\"\r\n      },\r\n      WhiteBalance : {\r\n          0 : \"Auto white balance\",\r\n          1 : \"Manual white balance\"\r\n      },\r\n      GainControl : {\r\n          0 : \"None\",\r\n          1 : \"Low gain up\",\r\n          2 : \"High gain up\",\r\n          3 : \"Low gain down\",\r\n          4 : \"High gain down\"\r\n      },\r\n      Contrast : {\r\n          0 : \"Normal\",\r\n          1 : \"Soft\",\r\n          2 : \"Hard\"\r\n      },\r\n      Saturation : {\r\n          0 : \"Normal\",\r\n          1 : \"Low saturation\",\r\n          2 : \"High saturation\"\r\n      },\r\n      Sharpness : {\r\n          0 : \"Normal\",\r\n          1 : \"Soft\",\r\n          2 : \"Hard\"\r\n      },\r\n      SubjectDistanceRange : {\r\n          0 : \"Unknown\",\r\n          1 : \"Macro\",\r\n          2 : \"Close view\",\r\n          3 : \"Distant view\"\r\n      },\r\n      FileSource : {\r\n          3 : \"DSC\"\r\n      },\r\n\r\n      Components : {\r\n          0 : \"\",\r\n          1 : \"Y\",\r\n          2 : \"Cb\",\r\n          3 : \"Cr\",\r\n          4 : \"R\",\r\n          5 : \"G\",\r\n          6 : \"B\"\r\n      }\r\n  };\r\n\r\n  function addEvent(element, event, handler) {\r\n      if (element.addEventListener) {\r\n          element.addEventListener(event, handler, false);\r\n      } else if (element.attachEvent) {\r\n          element.attachEvent(\"on\" + event, handler);\r\n      }\r\n  }\r\n\r\n  function imageHasData(img) {\r\n      return !!(img.exifdata);\r\n  }\r\n\r\n  function base64ToArrayBuffer(base64, contentType) {\r\n      contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\r\n      base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\r\n      var binary = atob(base64);\r\n      var len = binary.length;\r\n      var buffer = new ArrayBuffer(len);\r\n      var view = new Uint8Array(buffer);\r\n      for (var i = 0; i < len; i++) {\r\n          view[i] = binary.charCodeAt(i);\r\n      }\r\n      return buffer;\r\n  }\r\n\r\n  function objectURLToBlob(url, callback) {\r\n      var http = new XMLHttpRequest();\r\n      http.open(\"GET\", url, true);\r\n      http.responseType = \"blob\";\r\n      http.onload = function(e) {\r\n          if (this.status == 200 || this.status === 0) {\r\n              callback(this.response);\r\n          }\r\n      };\r\n      http.send();\r\n  }\r\n\r\n  function getImageData(img, callback) {\r\n      function handleBinaryFile(binFile) {\r\n          var data = findEXIFinJPEG(binFile);\r\n          var iptcdata = findIPTCinJPEG(binFile);\r\n          img.exifdata = data || {};\r\n          img.iptcdata = iptcdata || {};\r\n          if (callback) {\r\n              callback.call(img);\r\n          }\r\n      }\r\n\r\n      if (img.src) {\r\n          if (/^data\\:/i.test(img.src)) { // Data URI\r\n              var arrayBuffer = base64ToArrayBuffer(img.src);\r\n              handleBinaryFile(arrayBuffer);\r\n\r\n          } else if (/^blob\\:/i.test(img.src)) { // Object URL\r\n              var fileReader = new FileReader();\r\n              fileReader.onload = function(e) {\r\n                  handleBinaryFile(e.target.result);\r\n              };\r\n              objectURLToBlob(img.src, function (blob) {\r\n                  fileReader.readAsArrayBuffer(blob);\r\n              });\r\n          } else {\r\n              var http = new XMLHttpRequest();\r\n              http.onload = function() {\r\n                  if (this.status == 200 || this.status === 0) {\r\n                      handleBinaryFile(http.response);\r\n                  } else {\r\n                      throw \"Could not load image\";\r\n                  }\r\n                  http = null;\r\n              };\r\n              http.open(\"GET\", img.src, true);\r\n              http.responseType = \"arraybuffer\";\r\n              http.send(null);\r\n          }\r\n      } else if (window.FileReader && (img instanceof window.Blob || img instanceof window.File)) {\r\n          var fileReader = new FileReader();\r\n          fileReader.onload = function(e) {\r\n              if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\r\n              handleBinaryFile(e.target.result);\r\n          };\r\n\r\n          fileReader.readAsArrayBuffer(img);\r\n      }\r\n  }\r\n\r\n  function findEXIFinJPEG(file) {\r\n      var dataView = new DataView(file);\r\n\r\n      if (debug) console.log(\"Got file of length \" + file.byteLength);\r\n      if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\r\n          if (debug) console.log(\"Not a valid JPEG\");\r\n          return false; // not a valid jpeg\r\n      }\r\n\r\n      var offset = 2,\r\n          length = file.byteLength,\r\n          marker;\r\n\r\n      while (offset < length) {\r\n          if (dataView.getUint8(offset) != 0xFF) {\r\n              if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\r\n              return false; // not a valid marker, something is wrong\r\n          }\r\n\r\n          marker = dataView.getUint8(offset + 1);\r\n          if (debug) console.log(marker);\r\n\r\n          // we could implement handling for other markers here,\r\n          // but we're only looking for 0xFFE1 for EXIF data\r\n\r\n          if (marker == 225) {\r\n              if (debug) console.log(\"Found 0xFFE1 marker\");\r\n\r\n              return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\r\n\r\n              // offset += 2 + file.getShortAt(offset+2, true);\r\n\r\n          } else {\r\n              offset += 2 + dataView.getUint16(offset+2);\r\n          }\r\n\r\n      }\r\n\r\n  }\r\n\r\n  function findIPTCinJPEG(file) {\r\n      var dataView = new DataView(file);\r\n\r\n      if (debug) console.log(\"Got file of length \" + file.byteLength);\r\n      if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\r\n          if (debug) console.log(\"Not a valid JPEG\");\r\n          return false; // not a valid jpeg\r\n      }\r\n\r\n      var offset = 2,\r\n          length = file.byteLength;\r\n\r\n      var isFieldSegmentStart = function(dataView, offset){\r\n          return (\r\n              dataView.getUint8(offset) === 0x38 &&\r\n              dataView.getUint8(offset+1) === 0x42 &&\r\n              dataView.getUint8(offset+2) === 0x49 &&\r\n              dataView.getUint8(offset+3) === 0x4D &&\r\n              dataView.getUint8(offset+4) === 0x04 &&\r\n              dataView.getUint8(offset+5) === 0x04\r\n          );\r\n      };\r\n\r\n      while (offset < length) {\r\n\r\n          if ( isFieldSegmentStart(dataView, offset )){\r\n\r\n              // Get the length of the name header (which is padded to an even number of bytes)\r\n              var nameHeaderLength = dataView.getUint8(offset+7);\r\n              if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\r\n              // Check for pre photoshop 6 format\r\n              if(nameHeaderLength === 0) {\r\n                  // Always 4\r\n                  nameHeaderLength = 4;\r\n              }\r\n\r\n              var startOffset = offset + 8 + nameHeaderLength;\r\n              var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\r\n\r\n              return readIPTCData(file, startOffset, sectionLength);\r\n\r\n              break;\r\n\r\n          }\r\n\r\n          // Not the marker, continue searching\r\n          offset++;\r\n\r\n      }\r\n\r\n  }\r\n  var IptcFieldMap = {\r\n      0x78 : 'caption',\r\n      0x6E : 'credit',\r\n      0x19 : 'keywords',\r\n      0x37 : 'dateCreated',\r\n      0x50 : 'byline',\r\n      0x55 : 'bylineTitle',\r\n      0x7A : 'captionWriter',\r\n      0x69 : 'headline',\r\n      0x74 : 'copyright',\r\n      0x0F : 'category'\r\n  };\r\n  function readIPTCData(file, startOffset, sectionLength){\r\n      var dataView = new DataView(file);\r\n      var data = {};\r\n      var fieldValue, fieldName, dataSize, segmentType, segmentSize;\r\n      var segmentStartPos = startOffset;\r\n      while(segmentStartPos < startOffset+sectionLength) {\r\n          if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\r\n              segmentType = dataView.getUint8(segmentStartPos+2);\r\n              if(segmentType in IptcFieldMap) {\r\n                  dataSize = dataView.getInt16(segmentStartPos+3);\r\n                  segmentSize = dataSize + 5;\r\n                  fieldName = IptcFieldMap[segmentType];\r\n                  fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\r\n                  // Check if we already stored a value with this name\r\n                  if(data.hasOwnProperty(fieldName)) {\r\n                      // Value already stored with this name, create multivalue field\r\n                      if(data[fieldName] instanceof Array) {\r\n                          data[fieldName].push(fieldValue);\r\n                      }\r\n                      else {\r\n                          data[fieldName] = [data[fieldName], fieldValue];\r\n                      }\r\n                  }\r\n                  else {\r\n                      data[fieldName] = fieldValue;\r\n                  }\r\n              }\r\n\r\n          }\r\n          segmentStartPos++;\r\n      }\r\n      return data;\r\n  }\r\n\r\n  function readTags(file, tiffStart, dirStart, strings, bigEnd) {\r\n      var entries = file.getUint16(dirStart, !bigEnd),\r\n          tags = {},\r\n          entryOffset, tag,\r\n          i;\r\n\r\n      for (i=0;i<entries;i++) {\r\n          entryOffset = dirStart + i*12 + 2;\r\n          tag = strings[file.getUint16(entryOffset, !bigEnd)];\r\n          if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\r\n          tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\r\n      }\r\n      return tags;\r\n  }\r\n\r\n  function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\r\n      var type = file.getUint16(entryOffset+2, !bigEnd),\r\n          numValues = file.getUint32(entryOffset+4, !bigEnd),\r\n          valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\r\n          offset,\r\n          vals, val, n,\r\n          numerator, denominator;\r\n\r\n      switch (type) {\r\n          case 1: // byte, 8-bit unsigned int\r\n          case 7: // undefined, 8-bit byte, value depending on field\r\n              if (numValues == 1) {\r\n                  return file.getUint8(entryOffset + 8, !bigEnd);\r\n              } else {\r\n                  offset = numValues > 4 ? valueOffset : (entryOffset + 8);\r\n                  vals = [];\r\n                  for (n=0;n<numValues;n++) {\r\n                      vals[n] = file.getUint8(offset + n);\r\n                  }\r\n                  return vals;\r\n              }\r\n\r\n          case 2: // ascii, 8-bit byte\r\n              offset = numValues > 4 ? valueOffset : (entryOffset + 8);\r\n              return getStringFromDB(file, offset, numValues-1);\r\n\r\n          case 3: // short, 16 bit int\r\n              if (numValues == 1) {\r\n                  return file.getUint16(entryOffset + 8, !bigEnd);\r\n              } else {\r\n                  offset = numValues > 2 ? valueOffset : (entryOffset + 8);\r\n                  vals = [];\r\n                  for (n=0;n<numValues;n++) {\r\n                      vals[n] = file.getUint16(offset + 2*n, !bigEnd);\r\n                  }\r\n                  return vals;\r\n              }\r\n\r\n          case 4: // long, 32 bit int\r\n              if (numValues == 1) {\r\n                  return file.getUint32(entryOffset + 8, !bigEnd);\r\n              } else {\r\n                  vals = [];\r\n                  for (n=0;n<numValues;n++) {\r\n                      vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\r\n                  }\r\n                  return vals;\r\n              }\r\n\r\n          case 5:    // rational = two long values, first is numerator, second is denominator\r\n              if (numValues == 1) {\r\n                  numerator = file.getUint32(valueOffset, !bigEnd);\r\n                  denominator = file.getUint32(valueOffset+4, !bigEnd);\r\n                  val = new Number(numerator / denominator);\r\n                  val.numerator = numerator;\r\n                  val.denominator = denominator;\r\n                  return val;\r\n              } else {\r\n                  vals = [];\r\n                  for (n=0;n<numValues;n++) {\r\n                      numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\r\n                      denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\r\n                      vals[n] = new Number(numerator / denominator);\r\n                      vals[n].numerator = numerator;\r\n                      vals[n].denominator = denominator;\r\n                  }\r\n                  return vals;\r\n              }\r\n\r\n          case 9: // slong, 32 bit signed int\r\n              if (numValues == 1) {\r\n                  return file.getInt32(entryOffset + 8, !bigEnd);\r\n              } else {\r\n                  vals = [];\r\n                  for (n=0;n<numValues;n++) {\r\n                      vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\r\n                  }\r\n                  return vals;\r\n              }\r\n\r\n          case 10: // signed rational, two slongs, first is numerator, second is denominator\r\n              if (numValues == 1) {\r\n                  return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\r\n              } else {\r\n                  vals = [];\r\n                  for (n=0;n<numValues;n++) {\r\n                      vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\r\n                  }\r\n                  return vals;\r\n              }\r\n      }\r\n  }\r\n\r\n  function getStringFromDB(buffer, start, length) {\r\n      var outstr = \"\";\r\n      for (var n = start; n < start+length; n++) {\r\n          outstr += String.fromCharCode(buffer.getUint8(n));\r\n      }\r\n      return outstr;\r\n  }\r\n\r\n  function readEXIFData(file, start) {\r\n      if (getStringFromDB(file, start, 4) != \"Exif\") {\r\n          if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\r\n          return false;\r\n      }\r\n\r\n      var bigEnd,\r\n          tags, tag,\r\n          exifData, gpsData,\r\n          tiffOffset = start + 6;\r\n\r\n      // test for TIFF validity and endianness\r\n      if (file.getUint16(tiffOffset) == 0x4949) {\r\n          bigEnd = false;\r\n      } else if (file.getUint16(tiffOffset) == 0x4D4D) {\r\n          bigEnd = true;\r\n      } else {\r\n          if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\r\n          return false;\r\n      }\r\n\r\n      if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\r\n          if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\r\n          return false;\r\n      }\r\n\r\n      var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\r\n\r\n      if (firstIFDOffset < 0x00000008) {\r\n          if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\r\n          return false;\r\n      }\r\n\r\n      tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\r\n\r\n      if (tags.ExifIFDPointer) {\r\n          exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\r\n          for (tag in exifData) {\r\n              switch (tag) {\r\n                  case \"LightSource\" :\r\n                  case \"Flash\" :\r\n                  case \"MeteringMode\" :\r\n                  case \"ExposureProgram\" :\r\n                  case \"SensingMethod\" :\r\n                  case \"SceneCaptureType\" :\r\n                  case \"SceneType\" :\r\n                  case \"CustomRendered\" :\r\n                  case \"WhiteBalance\" :\r\n                  case \"GainControl\" :\r\n                  case \"Contrast\" :\r\n                  case \"Saturation\" :\r\n                  case \"Sharpness\" :\r\n                  case \"SubjectDistanceRange\" :\r\n                  case \"FileSource\" :\r\n                      exifData[tag] = StringValues[tag][exifData[tag]];\r\n                      break;\r\n\r\n                  case \"ExifVersion\" :\r\n                  case \"FlashpixVersion\" :\r\n                      exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\r\n                      break;\r\n\r\n                  case \"ComponentsConfiguration\" :\r\n                      exifData[tag] =\r\n                          StringValues.Components[exifData[tag][0]] +\r\n                          StringValues.Components[exifData[tag][1]] +\r\n                          StringValues.Components[exifData[tag][2]] +\r\n                          StringValues.Components[exifData[tag][3]];\r\n                      break;\r\n              }\r\n              tags[tag] = exifData[tag];\r\n          }\r\n      }\r\n\r\n      if (tags.GPSInfoIFDPointer) {\r\n          gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\r\n          for (tag in gpsData) {\r\n              switch (tag) {\r\n                  case \"GPSVersionID\" :\r\n                      gpsData[tag] = gpsData[tag][0] +\r\n                          \".\" + gpsData[tag][1] +\r\n                          \".\" + gpsData[tag][2] +\r\n                          \".\" + gpsData[tag][3];\r\n                      break;\r\n              }\r\n              tags[tag] = gpsData[tag];\r\n          }\r\n      }\r\n\r\n      return tags;\r\n  }\r\n\r\n  this.getData = function(img, callback) {\r\n      if ((img instanceof Image || img instanceof HTMLImageElement) && !img.complete) return false;\r\n\r\n      if (!imageHasData(img)) {\r\n          getImageData(img, callback);\r\n      } else {\r\n          if (callback) {\r\n              callback.call(img);\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n\r\n  this.getTag = function(img, tag) {\r\n      if (!imageHasData(img)) return;\r\n      return img.exifdata[tag];\r\n  }\r\n\r\n  this.getAllTags = function(img) {\r\n      if (!imageHasData(img)) return {};\r\n      var a,\r\n          data = img.exifdata,\r\n          tags = {};\r\n      for (a in data) {\r\n          if (data.hasOwnProperty(a)) {\r\n              tags[a] = data[a];\r\n          }\r\n      }\r\n      return tags;\r\n  }\r\n\r\n  this.pretty = function(img) {\r\n      if (!imageHasData(img)) return \"\";\r\n      var a,\r\n          data = img.exifdata,\r\n          strPretty = \"\";\r\n      for (a in data) {\r\n          if (data.hasOwnProperty(a)) {\r\n              if (typeof data[a] == \"object\") {\r\n                  if (data[a] instanceof Number) {\r\n                      strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\r\n                  } else {\r\n                      strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\r\n                  }\r\n              } else {\r\n                  strPretty += a + \" : \" + data[a] + \"\\r\\n\";\r\n              }\r\n          }\r\n      }\r\n      return strPretty;\r\n  }\r\n\r\n  this.readFromBinaryFile = function(file) {\r\n      return findEXIFinJPEG(file);\r\n  }\r\n}]);\r\n\r\ncrop.factory('cropHost', ['$document', 'cropAreaCircle', 'cropAreaSquare', 'cropEXIF', function($document, CropAreaCircle, CropAreaSquare, cropEXIF) {\r\n  /* STATIC FUNCTIONS */\r\n\r\n  // Get Element's Offset\r\n  var getElementOffset=function(elem) {\r\n      var box = elem.getBoundingClientRect();\r\n\r\n      var body = document.body;\r\n      var docElem = document.documentElement;\r\n\r\n      var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\r\n      var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\r\n\r\n      var clientTop = docElem.clientTop || body.clientTop || 0;\r\n      var clientLeft = docElem.clientLeft || body.clientLeft || 0;\r\n\r\n      var top  = box.top +  scrollTop - clientTop;\r\n      var left = box.left + scrollLeft - clientLeft;\r\n\r\n      return { top: Math.round(top), left: Math.round(left) };\r\n  };\r\n\r\n  return function(elCanvas, opts, events){\r\n    /* PRIVATE VARIABLES */\r\n\r\n    // Object Pointers\r\n    var ctx=null,\r\n        image=null,\r\n        theArea=null;\r\n\r\n    // Dimensions\r\n    var minCanvasDims=[300,300],\r\n        maxCanvasDims=[800,800];\r\n\r\n    // Result Image size\r\n    var resImgSize=200;\r\n\r\n    // Result Image type\r\n    var resImgFormat='image/png';\r\n\r\n    // Result Image quality\r\n    var resImgQuality=null;\r\n\r\n    /* PRIVATE FUNCTIONS */\r\n\r\n    // Draw Scene\r\n    function drawScene() {\r\n      // clear canvas\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n      if(image!==null) {\r\n        // draw source image\r\n        ctx.drawImage(image, 0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        ctx.save();\r\n\r\n        // and make it darker\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.65)';\r\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        ctx.restore();\r\n\r\n        // draw Area\r\n        theArea.draw();\r\n      }\r\n    }\r\n\r\n    // Resets CropHost\r\n    var resetCropHost=function() {\r\n      if(image!==null) {\r\n        theArea.setImage(image);\r\n        var imageDims=[image.width, image.height],\r\n            imageRatio=image.width/image.height,\r\n            canvasDims=imageDims;\r\n\r\n        if(canvasDims[0]>maxCanvasDims[0]) {\r\n          canvasDims[0]=maxCanvasDims[0];\r\n          canvasDims[1]=canvasDims[0]/imageRatio;\r\n        } else if(canvasDims[0]<minCanvasDims[0]) {\r\n          canvasDims[0]=minCanvasDims[0];\r\n          canvasDims[1]=canvasDims[0]/imageRatio;\r\n        }\r\n        if(canvasDims[1]>maxCanvasDims[1]) {\r\n          canvasDims[1]=maxCanvasDims[1];\r\n          canvasDims[0]=canvasDims[1]*imageRatio;\r\n        } else if(canvasDims[1]<minCanvasDims[1]) {\r\n          canvasDims[1]=minCanvasDims[1];\r\n          canvasDims[0]=canvasDims[1]*imageRatio;\r\n        }\r\n        elCanvas.prop('width',canvasDims[0]).prop('height',canvasDims[1]).css({'margin-left': -canvasDims[0]/2+'px', 'margin-top': -canvasDims[1]/2+'px'});\r\n\r\n        theArea.setX(ctx.canvas.width/2);\r\n        theArea.setY(ctx.canvas.height/2);\r\n        theArea.setSize(Math.min(200, ctx.canvas.width/2, ctx.canvas.height/2));\r\n      } else {\r\n        elCanvas.prop('width',0).prop('height',0).css({'margin-top': 0});\r\n      }\r\n\r\n      drawScene();\r\n    };\r\n\r\n    /**\r\n     * Returns event.changedTouches directly if event is a TouchEvent.\r\n     * If event is a jQuery event, return changedTouches of event.originalEvent\r\n     */\r\n    var getChangedTouches=function(event){\r\n      if(angular.isDefined(event.changedTouches)){\r\n        return event.changedTouches;\r\n      }else{\r\n        return event.originalEvent.changedTouches;\r\n      }\r\n    };\r\n\r\n    var onMouseMove=function(e) {\r\n      if(image!==null) {\r\n        var offset=getElementOffset(ctx.canvas),\r\n            pageX, pageY;\r\n        if(e.type === 'touchmove') {\r\n          pageX=getChangedTouches(e)[0].pageX;\r\n          pageY=getChangedTouches(e)[0].pageY;\r\n        } else {\r\n          pageX=e.pageX;\r\n          pageY=e.pageY;\r\n        }\r\n        theArea.processMouseMove(pageX-offset.left, pageY-offset.top);\r\n        drawScene();\r\n      }\r\n    };\r\n\r\n    var onMouseDown=function(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if(image!==null) {\r\n        var offset=getElementOffset(ctx.canvas),\r\n            pageX, pageY;\r\n        if(e.type === 'touchstart') {\r\n          pageX=getChangedTouches(e)[0].pageX;\r\n          pageY=getChangedTouches(e)[0].pageY;\r\n        } else {\r\n          pageX=e.pageX;\r\n          pageY=e.pageY;\r\n        }\r\n        theArea.processMouseDown(pageX-offset.left, pageY-offset.top);\r\n        drawScene();\r\n      }\r\n    };\r\n\r\n    var onMouseUp=function(e) {\r\n      if(image!==null) {\r\n        var offset=getElementOffset(ctx.canvas),\r\n            pageX, pageY;\r\n        if(e.type === 'touchend') {\r\n          pageX=getChangedTouches(e)[0].pageX;\r\n          pageY=getChangedTouches(e)[0].pageY;\r\n        } else {\r\n          pageX=e.pageX;\r\n          pageY=e.pageY;\r\n        }\r\n        theArea.processMouseUp(pageX-offset.left, pageY-offset.top);\r\n        drawScene();\r\n      }\r\n    };\r\n\r\n    this.getResultImageDataURI=function() {\r\n      var temp_ctx, temp_canvas;\r\n      temp_canvas = angular.element('<canvas></canvas>')[0];\r\n      temp_ctx = temp_canvas.getContext('2d');\r\n      temp_canvas.width = resImgSize;\r\n      temp_canvas.height = resImgSize;\r\n      if(image!==null){\r\n        temp_ctx.drawImage(image, (theArea.getX()-theArea.getSize()/2)*(image.width/ctx.canvas.width), (theArea.getY()-theArea.getSize()/2)*(image.height/ctx.canvas.height), theArea.getSize()*(image.width/ctx.canvas.width), theArea.getSize()*(image.height/ctx.canvas.height), 0, 0, resImgSize, resImgSize);\r\n      }\r\n      if (resImgQuality!==null ){\r\n        return temp_canvas.toDataURL(resImgFormat, resImgQuality);\r\n      }\r\n      return temp_canvas.toDataURL(resImgFormat);\r\n    };\r\n\r\n    this.setNewImageSource=function(imageSource) {\r\n      image=null;\r\n      resetCropHost();\r\n      events.trigger('image-updated');\r\n      if(!!imageSource) {\r\n        var newImage = new Image();\r\n        if(imageSource.substring(0,4).toLowerCase()==='http') {\r\n          newImage.crossOrigin = 'anonymous';\r\n        }\r\n        newImage.onload = function(){\r\n          events.trigger('load-done');\r\n\r\n          cropEXIF.getData(newImage,function(){\r\n            var orientation=cropEXIF.getTag(newImage,'Orientation');\r\n\r\n            if([3,6,8].indexOf(orientation)>-1) {\r\n              var canvas = document.createElement(\"canvas\"),\r\n                  ctx=canvas.getContext(\"2d\"),\r\n                  cw = newImage.width, ch = newImage.height, cx = 0, cy = 0, deg=0;\r\n              switch(orientation) {\r\n                case 3:\r\n                  cx=-newImage.width;\r\n                  cy=-newImage.height;\r\n                  deg=180;\r\n                  break;\r\n                case 6:\r\n                  cw = newImage.height;\r\n                  ch = newImage.width;\r\n                  cy=-newImage.height;\r\n                  deg=90;\r\n                  break;\r\n                case 8:\r\n                  cw = newImage.height;\r\n                  ch = newImage.width;\r\n                  cx=-newImage.width;\r\n                  deg=270;\r\n                  break;\r\n              }\r\n\r\n              canvas.width = cw;\r\n              canvas.height = ch;\r\n              ctx.rotate(deg*Math.PI/180);\r\n              ctx.drawImage(newImage, cx, cy);\r\n\r\n              image=new Image();\r\n              image.src = canvas.toDataURL(\"image/png\");\r\n            } else {\r\n              image=newImage;\r\n            }\r\n            resetCropHost();\r\n            events.trigger('image-updated');\r\n          });\r\n        };\r\n        newImage.onerror=function() {\r\n          events.trigger('load-error');\r\n        };\r\n        events.trigger('load-start');\r\n        newImage.src=imageSource;\r\n      }\r\n    };\r\n\r\n    this.setMaxDimensions=function(width, height) {\r\n      maxCanvasDims=[width,height];\r\n\r\n      if(image!==null) {\r\n        var curWidth=ctx.canvas.width,\r\n            curHeight=ctx.canvas.height;\r\n\r\n        var imageDims=[image.width, image.height],\r\n            imageRatio=image.width/image.height,\r\n            canvasDims=imageDims;\r\n\r\n        if(canvasDims[0]>maxCanvasDims[0]) {\r\n          canvasDims[0]=maxCanvasDims[0];\r\n          canvasDims[1]=canvasDims[0]/imageRatio;\r\n        } else if(canvasDims[0]<minCanvasDims[0]) {\r\n          canvasDims[0]=minCanvasDims[0];\r\n          canvasDims[1]=canvasDims[0]/imageRatio;\r\n        }\r\n        if(canvasDims[1]>maxCanvasDims[1]) {\r\n          canvasDims[1]=maxCanvasDims[1];\r\n          canvasDims[0]=canvasDims[1]*imageRatio;\r\n        } else if(canvasDims[1]<minCanvasDims[1]) {\r\n          canvasDims[1]=minCanvasDims[1];\r\n          canvasDims[0]=canvasDims[1]*imageRatio;\r\n        }\r\n        elCanvas.prop('width',canvasDims[0]).prop('height',canvasDims[1]).css({'margin-left': -canvasDims[0]/2+'px', 'margin-top': -canvasDims[1]/2+'px'});\r\n\r\n        var ratioNewCurWidth=ctx.canvas.width/curWidth,\r\n            ratioNewCurHeight=ctx.canvas.height/curHeight,\r\n            ratioMin=Math.min(ratioNewCurWidth, ratioNewCurHeight);\r\n\r\n        theArea.setX(theArea.getX()*ratioNewCurWidth);\r\n        theArea.setY(theArea.getY()*ratioNewCurHeight);\r\n        theArea.setSize(theArea.getSize()*ratioMin);\r\n      } else {\r\n        elCanvas.prop('width',0).prop('height',0).css({'margin-top': 0});\r\n      }\r\n\r\n      drawScene();\r\n\r\n    };\r\n\r\n    this.setAreaMinSize=function(size) {\r\n      size=parseInt(size,10);\r\n      if(!isNaN(size)) {\r\n        theArea.setMinSize(size);\r\n        drawScene();\r\n      }\r\n    };\r\n\r\n    this.setResultImageSize=function(size) {\r\n      size=parseInt(size,10);\r\n      if(!isNaN(size)) {\r\n        resImgSize=size;\r\n      }\r\n    };\r\n\r\n    this.setResultImageFormat=function(format) {\r\n      resImgFormat = format;\r\n    };\r\n\r\n    this.setResultImageQuality=function(quality){\r\n      quality = parseFloat(quality);\r\n      if (!isNaN(quality) && quality>=0 && quality<=1){\r\n        resImgQuality = quality;\r\n      }\r\n    };\r\n\r\n    this.setAreaType=function(type) {\r\n      var curSize=theArea.getSize(),\r\n          curMinSize=theArea.getMinSize(),\r\n          curX=theArea.getX(),\r\n          curY=theArea.getY();\r\n\r\n      var AreaClass=CropAreaCircle;\r\n      if(type==='square') {\r\n        AreaClass=CropAreaSquare;\r\n      }\r\n      theArea = new AreaClass(ctx, events);\r\n      theArea.setMinSize(curMinSize);\r\n      theArea.setSize(curSize);\r\n      theArea.setX(curX);\r\n      theArea.setY(curY);\r\n\r\n      // resetCropHost();\r\n      if(image!==null) {\r\n        theArea.setImage(image);\r\n      }\r\n\r\n      drawScene();\r\n    };\r\n\r\n    /* Life Cycle begins */\r\n\r\n    // Init Context var\r\n    ctx = elCanvas[0].getContext('2d');\r\n\r\n    // Init CropArea\r\n    theArea = new CropAreaCircle(ctx, events);\r\n\r\n    // Init Mouse Event Listeners\r\n    $document.on('mousemove',onMouseMove);\r\n    elCanvas.on('mousedown',onMouseDown);\r\n    $document.on('mouseup',onMouseUp);\r\n\r\n    // Init Touch Event Listeners\r\n    $document.on('touchmove',onMouseMove);\r\n    elCanvas.on('touchstart',onMouseDown);\r\n    $document.on('touchend',onMouseUp);\r\n\r\n    // CropHost Destructor\r\n    this.destroy=function() {\r\n      $document.off('mousemove',onMouseMove);\r\n      elCanvas.off('mousedown',onMouseDown);\r\n      $document.off('mouseup',onMouseMove);\r\n\r\n      $document.off('touchmove',onMouseMove);\r\n      elCanvas.off('touchstart',onMouseDown);\r\n      $document.off('touchend',onMouseMove);\r\n\r\n      elCanvas.remove();\r\n    };\r\n  };\r\n\r\n}]);\r\n\r\n\r\ncrop.factory('cropPubSub', [function() {\r\n  return function() {\r\n    var events = {};\r\n    // Subscribe\r\n    this.on = function(names, handler) {\r\n      names.split(' ').forEach(function(name) {\r\n        if (!events[name]) {\r\n          events[name] = [];\r\n        }\r\n        events[name].push(handler);\r\n      });\r\n      return this;\r\n    };\r\n    // Publish\r\n    this.trigger = function(name, args) {\r\n      angular.forEach(events[name], function(handler) {\r\n        handler.call(null, args);\r\n      });\r\n      return this;\r\n    };\r\n  };\r\n}]);\r\n\r\ncrop.directive('imgCrop', ['$timeout', 'cropHost', 'cropPubSub', function($timeout, CropHost, CropPubSub) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      image: '=',\r\n      resultImage: '=',\r\n\r\n      changeOnFly: '=',\r\n      areaType: '@',\r\n      areaMinSize: '=',\r\n      resultImageSize: '=',\r\n      resultImageFormat: '@',\r\n      resultImageQuality: '=',\r\n\r\n      onChange: '&',\r\n      onLoadBegin: '&',\r\n      onLoadDone: '&',\r\n      onLoadError: '&'\r\n    },\r\n    template: '<canvas></canvas>',\r\n    controller: ['$scope', function($scope) {\r\n      $scope.events = new CropPubSub();\r\n    }],\r\n    link: function(scope, element/*, attrs*/) {\r\n      // Init Events Manager\r\n      var events = scope.events;\r\n\r\n      // Init Crop Host\r\n      var cropHost=new CropHost(element.find('canvas'), {}, events);\r\n\r\n      // Store Result Image to check if it's changed\r\n      var storedResultImage;\r\n\r\n      var updateResultImage=function(scope) {\r\n        var resultImage=cropHost.getResultImageDataURI();\r\n        if(storedResultImage!==resultImage) {\r\n          storedResultImage=resultImage;\r\n          if(angular.isDefined(scope.resultImage)) {\r\n            scope.resultImage=resultImage;\r\n          }\r\n          scope.onChange({$dataURI: scope.resultImage});\r\n        }\r\n      };\r\n\r\n      // Wrapper to safely exec functions within $apply on a running $digest cycle\r\n      var fnSafeApply=function(fn) {\r\n        return function(){\r\n          $timeout(function(){\r\n            scope.$apply(function(scope){\r\n              fn(scope);\r\n            });\r\n          });\r\n        };\r\n      };\r\n\r\n      // Setup CropHost Event Handlers\r\n      events\r\n        .on('load-start', fnSafeApply(function(scope){\r\n          scope.onLoadBegin({});\r\n        }))\r\n        .on('load-done', fnSafeApply(function(scope){\r\n          scope.onLoadDone({});\r\n        }))\r\n        .on('load-error', fnSafeApply(function(scope){\r\n          scope.onLoadError({});\r\n        }))\r\n        .on('area-move area-resize', fnSafeApply(function(scope){\r\n          if(!!scope.changeOnFly) {\r\n            updateResultImage(scope);\r\n          }\r\n        }))\r\n        .on('area-move-end area-resize-end image-updated', fnSafeApply(function(scope){\r\n          updateResultImage(scope);\r\n        }));\r\n\r\n      // Sync CropHost with Directive's options\r\n      scope.$watch('image',function(){\r\n        cropHost.setNewImageSource(scope.image);\r\n      });\r\n      scope.$watch('areaType',function(){\r\n        cropHost.setAreaType(scope.areaType);\r\n        updateResultImage(scope);\r\n      });\r\n      scope.$watch('areaMinSize',function(){\r\n        cropHost.setAreaMinSize(scope.areaMinSize);\r\n        updateResultImage(scope);\r\n      });\r\n      scope.$watch('resultImageSize',function(){\r\n        cropHost.setResultImageSize(scope.resultImageSize);\r\n        updateResultImage(scope);\r\n      });\r\n      scope.$watch('resultImageFormat',function(){\r\n        cropHost.setResultImageFormat(scope.resultImageFormat);\r\n        updateResultImage(scope);\r\n      });\r\n      scope.$watch('resultImageQuality',function(){\r\n        cropHost.setResultImageQuality(scope.resultImageQuality);\r\n        updateResultImage(scope);\r\n      });\r\n\r\n      // Update CropHost dimensions when the directive element is resized\r\n      scope.$watch(\r\n        function () {\r\n          return [element[0].clientWidth, element[0].clientHeight];\r\n        },\r\n        function (value) {\r\n          cropHost.setMaxDimensions(value[0],value[1]);\r\n          updateResultImage(scope);\r\n        },\r\n        true\r\n      );\r\n\r\n      // Destroy CropHost Instance when the directive is destroying\r\n      scope.$on('$destroy', function(){\r\n          cropHost.destroy();\r\n      });\r\n    }\r\n  };\r\n}]);\r\n}());\r\n","/*global angular */\r\n(function () {\r\n    \"use strict\";\r\n\r\n    function PlgEditFabSpeedDial() {\r\n\r\n        return {\r\n            restrict    : 'E',\r\n            controller  : 'PlgEditFabSpeedDialController',\r\n            templateUrl : 'myComponentSample.html',\r\n            replace     : true,\r\n            link : function (scope) {\r\n                scope.tagline = \"it Works!\";\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    angular.module('plingUi').directive('plgEditFabSpeedDial', PlgEditFabSpeedDial);\r\n}());\r\n","/*global angular, $parse*/\r\n(function () {\r\n    \"use strict\";\r\n\r\n    angular.module('plingUi').directive('plgSetFocus', [ '$parse', '$timeout', function ($parse, $timeout) {\r\n\r\n        return {\r\n            restrict    : 'A',\r\n            replace     : true,\r\n            link        : function ($scope, element, attrs) {\r\n\r\n                var model = $parse(attrs.plgSetFocus);\r\n\r\n                $scope.$watch(model, function (value) {\r\n                    if (value === true) {\r\n                        $timeout(function () {\r\n                            element[0].focus();\r\n                        });\r\n                    }\r\n                });\r\n\r\n                element.bind('blur', function () {\r\n                    $scope.$apply(model.assign($scope, false));\r\n                });\r\n\r\n            }\r\n        };\r\n    }]);\r\n}());\r\n","angular.module(\"plingUi.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"myComponentSample.html\",\"<div class=myComponentSample>My Component Sample: <span ng-bind=tagline></span></div>\");\n$templateCache.put(\"plgEditFabSpeedDial.template.html\",\"\");}]);"],"sourceRoot":"/source/"}